(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[311],{4034:function(e){function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=function(){return[]},t.resolve=t,t.id=4034,e.exports=t},947:function(e){function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=function(){return[]},t.resolve=t,t.id=947,e.exports=t},8114:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/playground",function(){return n(1798)}])},1798:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return we}});var o=n(7568),i=n(2222),a=n(4051),r=n.n(a),s=n(5893),l=n(9008),c=n.n(l),p=n(7294),d=n(6740),u=(n(7193),n(3073));n(7219);function h(){return h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},h.apply(this,arguments)}var m=function(e){var t=e.flipped?"M27 39C26.5 32.7511 21.9 17.5173 7.5 6.57333M16.5 4.04L0.999999 0.999998C3.16667 4.88444 7.5 13.16 7.5 15.1867":"M1 39C1.5 32.7511 6.1 17.5173 20.5 6.57333M11.5 4.04L27 0.999998C24.8333 4.88444 20.5 13.16 20.5 15.1867",n=e.arrowRot.split(" ");return"<svg style='transform: translateX("+n[1]+") translateY("+n[2]+") rotate("+n[0]+');\' width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="'+t+'" stroke="black" />\n</svg>'};var g=function(e){return e.replace(/"/g,"\u20df")},f=function(e){return e.replace(/\u20df/g,'"')},y=function(e){return e.replace(/\u21cd/g,"<").replace(/\u21cf/g,">").replace(/\u21ef/g,"'").replace(/\xbf/g,"'")};function k(e){return e.replace(/</g,"&lt;").replace(/>/g,"&gt;")}var w=function(e){return!!Object.keys(e||{}).find((function(e){return!!e.includes("-")||!isNaN(parseInt(e))}))},b=function(e){var t=[];return Object.keys(e||{}).find((function(e){if(isNaN(parseInt(e))||t.push(parseInt(e)),e.includes("-"))for(var n=e.split("-"),o=n[0],i=n[1],a=parseInt(i)+1,r=parseInt(o);r<a;r++)t.push(r)})),function(e){return t.includes(e)}},v=function(e,t,n){var o=e.bg||"#fff",i=e.fg||"black",a=["shiki",e.themeName||"",t.class,t.title?"with-title":""].concat(n||[]).filter(Boolean).join(" ").trim(),r=Object.entries(t).filter((function(e){return["string","number","boolean"].includes(typeof e[1])&&!["class","twoslash"].includes(e[0])&&!1!==e[1]})).map((function(e){return e[0]+'="'+e[1]+'"'})).join(" ").trim();return'<pre class="'+a+'" style="background-color: '+o+"; color: "+i+'"'+(r?" "+r:"")+">"};function x(e,t,n){var o="";return o+=v(t,n,[]),n.title&&(o+="<div class='code-title'>"+n.title+"</div>"),t.langId&&(o+='<div class="language-id">'+t.langId+"</div>"),o+="<div class='code-container'><code>",o=(o+=k(e)).replace(/\n*$/,""),o+="</code></div></pre>"}function j(e,t,n,o){var i="",a=o.highlight&&w(o.highlight),r=b(o.highlight);n.tags&&n.tags.length&&(i+="<div class='tag-container'>"),i+=v(t,o,["twoslash","lsp"]),o.title&&(i+="<div class='code-title'>"+o.title+"</div>"),t.langId&&(i+='<div class="language-id">'+t.langId+"</div>"),i+="<div class='code-container'><code>";var s,l=S(n.errors,(function(e){return e.line}))||new Map,c=S(n.staticQuickInfos,(function(e){return e.line}))||new Map,p=S(n.queries,(function(e){return e.line-1}))||new Map,u=S(n.tags,(function(e){return e.line-1}))||new Map,x=0;if(e.forEach((function(e,n){var o=l.get(n)||[],s=c.get(n)||[],d=p.get(n)||[],h=u.get(n)||[],m="<div class='line"+(a?r(n+1)?" highlight":" dim":"")+"'>";if(0===e.length&&0===n)x+=1;else if(0===e.length){i+=m+"&nbsp;</div>",x+=1}else{i+=m;var w=0;e.forEach((function(e){var n,a="",r=function(t){return function(n){return t<=n.character&&t+e.content.length>=n.character+n.length}},l=o.filter(r(w)),c=s.filter(r(w)),p=d.filter(r(w));n=n||c.find((function(e){return e.text===(d.length&&d[0].text)}));var u=[].concat(l,c,p).sort((function(e,t){return(e.start||0)-(t.start||0)}));if(u.length){var h,m=u.map((function(e){var n={begin:e.start-x,end:e.start+e.length-x};if("renderedMessage"in e&&(n.classes="err"),"kind"in e&&(n.classes=e.kind),"targetString"in e){n.classes="lsp";var o=t.includeJSDocInHover&&e.docs?e.docs+"\n\n"+e.text:e.text;n.lsp=o}return n}));a+=function(e,t,n){void 0===n&&(n="");var o=function(e){return"\u21cd"+e+"\u21cf"},i=function(e,t){switch(e.classes){case"lsp":var i=g(e.lsp||""),a=e.lsp===n?"style=\u21efborder-bottom: solid 2px lightgrey;\u21ef":"";return o(t?"/data-lsp":"data-lsp lsp=\xbf"+i+"\xbf "+a);case"query":return o((t?"/":"")+"data-highlight");default:return o((t?"/":"")+"data-err")}};e.sort((function(e,t){var n=function(e){return["err","query","lsp"].indexOf(null!=e?e:"")},o=0;return!(o=e.begin-t.begin)&&!(o=t.end-e.end)&&(o=n(e.classes)-n(t.classes)),o}));var a=0,r=function e(n){var o="",r=n.shift();return o+=t.substring(a,r.begin),a=r.begin,o+=i(r),n.some((function(e){return e.begin<r.end}))?o+=e(n):(o+=t.substring(r.begin,r.end),a=r.end),o+=i(r,!0),0!==n.length&&(o+=e(n)),o}(JSON.parse(JSON.stringify(e)))+t.substring(a);return f(y(function(e){var t={"<":"lt",'"':"quot","'":"apos","&":"amp","\r":"#13","\n":"#10"};return e.toString().replace(/[<"'\r\n&]/g,(function(e){return"&"+t[e]+";"}))}(r)))}(m,e.content,null==(h=n)?void 0:h.text)}else a+=e.content.replace(/</g,"\u21cd").replace(/>/g,"\u21cf").replace(/'/g,"\u21ef");i+='<span style="color: '+e.color+'">'+a+"</span>",w+=e.content.length,x+=e.content.length})),i+="</div>",x+=1}if(o.length){var b=o.map((function(e){return k(e.renderedMessage)})).join("</br>"),v=o.map((function(e){return e.code})).join("<br/>");i+='<span class="error"><span>'+b+'</span><span class="code">'+v+"</span></span>",i+='<span class="error-behind">'+b+"</span>"}d.length&&d.forEach((function(e){switch(i+="<div class='meta-line'>",e.kind){case"query":var t=k(e.text),o=(c.get(n)||[]).find((function(e){return e.text===(d.length&&d[0].text)})),a=(o&&o.character+(null==o?void 0:o.length)/2)-1||0;i+="<span class='popover-prefix'>"+" ".repeat(a)+"</span><span class='popover'><div class='arrow'></div>"+t+"</span>";break;case"completions":if(e.completions){var r=e.completions.filter((function(t){return t.name.startsWith(e.completionsPrefix||"____")})).sort((function(e,t){return e.name.localeCompare(t.name)})).map((function(t){var n,o,i=t.name.substr((null==(n=e.completionsPrefix)?void 0:n.length)||0),a="<span><span class='result-found'>"+(e.completionsPrefix||"")+"</span>"+i+"</span>";return"<li class='"+((null==(o=t.kindModifiers)?void 0:o.split(",").includes("deprecated"))?"deprecated":"")+"'>"+a+"</li>"})).join("");i+="&nbsp;".repeat(e.offset)+"<span class='inline-completions'><ul class='dropdown'>"+r+"</ul></span>"}else i+="<span class='query'>//"+"".padStart(e.offset-2)+"^ - No completions found</span>"}i+="</div>"})),h.length&&h.forEach((function(e){if(["error","warn","log"].includes(e.name)){switch(i+="<div class='meta-line logger "+e.name+"-log'>",e.name){case"error":i+=N+"<span class='message'>"+(e.annotation||"N/A")+"</span>";break;case"warn":i+=C+"<span class='message'>"+(e.annotation||"N/A")+"</span>";break;case"log":i+=E+"<span class='message'>"+(e.annotation||"N/A")+"</span>"}i+="</div>"}}))})),s=i.replace(/\n*$/,""),i=s.replace(/\u21cd/g,"&lt;").replace(/\u21cf/g,"&gt;").replace(/\u21ef/g,"&apos;"),t.addTryButton){var j="<a class='playground-link' href='"+n.playgroundURL+"'>Try</a>";i+="</code>"+j}else i+="</code>";return i+="</div></pre>",n.tags&&n.tags.length&&(i+=function(e){var t="";return e.forEach((function(e){if("annotate"===e.name&&e.annotation){var n=e.annotation.split(" - "),o=n.pop(),i=(n[0]||"").trim(),a=i.includes("right"),r={flipped:a,arrowRot:"90deg 20px 20px",textDegree:"0deg",top:e.line+"em"};if(i.includes("{")){var s="{"+i.split("{")[1];try{r=h({},r,JSON.parse(s))}catch(c){throw new d.A("Could not parse annotation","The annotation "+JSON.stringify(e)+" could convert '"+s+"' into JSON","Look at "+c.message+".")}}var l=m(r);t+="\n<div class='twoslash-annotation "+(a?"right":"left")+"' style=\"top: "+r.top+'">\n  '+l+"\n  <p class='twoslash-annotation-text' style=\"transform: rotate("+r.textDegree+')">'+o+"</p>\n</div>"}})),t}(n.tags),i+="</div>"),i}function S(e,t){var n=new Map;return e.forEach((function(e){var o=t(e),i=n.get(o);i?i.push(e):n.set(o,[e])})),n}var N='<svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4.63018 1.29289L1.29289 4.63018C1.10536 4.81772 1 5.07207 1 5.33729V13.6627C1 13.9279 1.10536 14.1823 1.29289 14.3698L4.63018 17.7071C4.81772 17.8946 5.07207 18 5.33729 18H13.6627C13.9279 18 14.1823 17.8946 14.3698 17.7071L17.7071 14.3698C17.8946 14.1823 18 13.9279 18 13.6627V5.33729C18 5.07207 17.8946 4.81772 17.7071 4.63018L14.3698 1.29289C14.1823 1.10536 13.9279 1 13.6627 1H5.33729C5.07207 1 4.81772 1.10536 4.63018 1.29289Z" fill="#E72622" stroke="#E72622"/><rect x="8" y="4" width="3" height="7" fill="white"/><rect x="8" y="13" width="3" height="3" fill="white"/></svg>',C='<svg width="21" height="18" viewBox="0 0 21 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.63401 0.5C10.0189 -0.166667 10.9812 -0.166667 11.3661 0.5L20.4593 16.25C20.8442 16.9167 20.3631 17.75 19.5933 17.75H1.40676C0.636965 17.75 0.15584 16.9167 0.54074 16.25L9.63401 0.5Z" fill="#E5A604"/><rect x="9" y="4" width="3" height="7" fill="white"/><rect x="9" y="13" width="3" height="3" fill="white"/></svg>',E='<svg width="12" height="15" viewBox="0 0 12 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M5.76822 0.359816C5.41466 -0.0644613 4.78409 -0.121785 4.35982 0.231779C3.93554 0.585343 3.87821 1.21591 4.23178 1.64018L5.76822 0.359816ZM10 7L10.7926 7.60971L11.2809 6.97499L10.7682 6.35982L10 7ZM4.20738 12.8903C3.87064 13.328 3.95254 13.9559 4.39029 14.2926C4.82804 14.6294 5.45589 14.5475 5.79262 14.1097L4.20738 12.8903ZM4.23178 1.64018L9.23178 7.64018L10.7682 6.35982L5.76822 0.359816L4.23178 1.64018ZM9.20738 6.39029L4.20738 12.8903L5.79262 14.1097L10.7926 7.60971L9.20738 6.39029Z" fill="#BDBDBD"/><line y1="3.5" x2="4" y2="3.5" stroke="#BDBDBD"/><path d="M0 7H4" stroke="#BDBDBD"/><line y1="10.5" x2="4" y2="10.5" stroke="#BDBDBD"/></svg>';function T(e,t,n){var o="",i=n.highlight&&w(n.highlight),a=b(n.highlight);return o+=v(t,n,[]),n.title&&(o+="<div class='code-title'>"+n.title+"</div>"),t.langId&&(o+='<div class="language-id">'+t.langId+"</div>"),o+="<div class='code-container'><code>",e.forEach((function(e,t){if(0===e.length)o+="<div class='line'></div>";else{var n=i?a(t)?" highlight":" dim":"";o+="<div class='line"+n+"'>",e.forEach((function(e){o+='<span style="color: '+e.color+'">'+k(e.content)+"</span>"})),o+="</div>"}})),o=o.replace(/\n*$/,""),o+="</code></div></pre>"}var D={compilerOptions:"The set of compiler options for your project",allowArbitraryExtensions:"Enable importing files with any extension, provided a declaration file is present.",allowImportingTsExtensions:"Allow imports to include TypeScript file extensions.",allowJs:"Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files.",allowSyntheticDefaultImports:"Allow 'import x from y' when a module doesn't have a default export.",allowUmdGlobalAccess:"Allow accessing UMD globals from modules.",allowUnreachableCode:"Disable error reporting for unreachable code.",allowUnusedLabels:"Disable error reporting for unused labels.",alwaysStrict:"Ensure 'use strict' is always emitted.",assumeChangesOnlyAffectDirectDependencies:"Have recompiles in projects that use [`incremental`](#incremental) and `watch` mode assume that changes within a file will only affect files directly depending on it.",baseUrl:"Specify the base directory to resolve non-relative module names.",charset:"No longer supported. In early versions, manually set the text encoding for reading files.",checkJs:"Enable error reporting in type-checked JavaScript files.",clean:"Delete the outputs of all projects.",composite:"Enable constraints that allow a TypeScript project to be used with project references.",customConditions:"Conditions to set in addition to the resolver-specific defaults when resolving imports.",declaration:"Generate .d.ts files from TypeScript and JavaScript files in your project.",declarationDir:"Specify the output directory for generated declaration files.",declarationMap:"Create sourcemaps for d.ts files.",diagnostics:"Output compiler performance information after building.",disableFilenameBasedTypeAcquisition:"Disables inference for type acquisition by looking at filenames in a project.",disableReferencedProjectLoad:"Reduce the number of projects loaded automatically by TypeScript.",disableSizeLimit:"Remove the 20mb cap on total source code size for JavaScript files in the TypeScript language server.",disableSolutionSearching:"Opt a project out of multi-project reference checking when editing.",disableSourceOfProjectReferenceRedirect:"Disable preferring source files instead of declaration files when referencing composite projects.",downlevelIteration:"Emit more compliant, but verbose and less performant JavaScript for iteration.",emitBOM:"Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.",emitDeclarationOnly:"Only output d.ts files and not JavaScript files.",emitDecoratorMetadata:"Emit design-type metadata for decorated declarations in source files.",enable:"Disable the type acquisition for JavaScript projects.",esModuleInterop:"Emit additional JavaScript to ease support for importing CommonJS modules. This enables [`allowSyntheticDefaultImports`](#allowSyntheticDefaultImports) for type compatibility.",exactOptionalPropertyTypes:"Interpret optional property types as written, rather than adding `undefined`.",exclude:"Filters results from the [`include`](#include) option.",excludeDirectories:"Remove a list of directories from the watch process.",excludeFiles:"Remove a list of files from the watch mode's processing.",experimentalDecorators:"Enable experimental support for TC39 stage 2 draft decorators.",explainFiles:"Print files read during the compilation including why it was included.",extendedDiagnostics:"Output more detailed compiler performance information after building.",extends:"Specify one or more path or node module references to base configuration files from which settings are inherited.",fallbackPolling:"Specify what approach the watcher should use if the system runs out of native file watchers.",files:"Include a list of files. This does not support glob patterns, as opposed to [`include`](#include).",force:"Build all projects, including those that appear to be up to date.",forceConsistentCasingInFileNames:"Ensure that casing is correct in imports.",generateCpuProfile:"Emit a v8 CPU profile of the compiler run for debugging.",importHelpers:"Allow importing helper functions from tslib once per project, instead of including them per-file.",importsNotUsedAsValues:"Specify emit/checking behavior for imports that are only used for types.",include:"Specify a list of glob patterns that match files to be included in compilation.",incremental:"Save .tsbuildinfo files to allow for incremental compilation of projects.",inlineSourceMap:"Include sourcemap files inside the emitted JavaScript.",inlineSources:"Include source code in the sourcemaps inside the emitted JavaScript.",isolatedModules:"Ensure that each file can be safely transpiled without relying on other imports.",jsx:"Specify what JSX code is generated.",jsxFactory:"Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'.",jsxFragmentFactory:"Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'.",jsxImportSource:"Specify module specifier used to import the JSX factory functions when using `jsx: react-jsx*`.",keyofStringsOnly:"Make keyof only return strings instead of string, numbers or symbols. Legacy option.",lib:"Specify a set of bundled library declaration files that describe the target runtime environment.",listEmittedFiles:"Print the names of emitted files after a compilation.",listFiles:"Print all of the files read during the compilation.",locale:"Set the language of the messaging from TypeScript. This does not affect emit.",mapRoot:"Specify the location where debugger should locate map files instead of generated locations.",maxNodeModuleJsDepth:"Specify the maximum folder depth used for checking JavaScript files from `node_modules`. Only applicable with [`allowJs`](#allowJs).",module:"Specify what module code is generated.",moduleDetection:"Control what method is used to detect the whether a JS file is a module.",moduleResolution:"Specify how TypeScript looks up a file from a given module specifier.",moduleSuffixes:"List of file name suffixes to search when resolving a module.",newLine:"Set the newline character for emitting files.",noEmit:"Disable emitting files from a compilation.",noEmitHelpers:"Disable generating custom helper functions like `__extends` in compiled output.",noEmitOnError:"Disable emitting files if any type checking errors are reported.",noErrorTruncation:"Disable truncating types in error messages.",noFallthroughCasesInSwitch:"Enable error reporting for fallthrough cases in switch statements.",noImplicitAny:"Enable error reporting for expressions and declarations with an implied `any` type.",noImplicitOverride:"Ensure overriding members in derived classes are marked with an override modifier.",noImplicitReturns:"Enable error reporting for codepaths that do not explicitly return in a function.",noImplicitThis:"Enable error reporting when `this` is given the type `any`.",noImplicitUseStrict:"Disable adding 'use strict' directives in emitted JavaScript files.",noLib:"Disable including any library files, including the default lib.d.ts.",noPropertyAccessFromIndexSignature:"Enforces using indexed accessors for keys declared using an indexed type.",noResolve:"Disallow `import`s, `require`s or `<reference>`s from expanding the number of files TypeScript should add to a project.",noStrictGenericChecks:"Disable strict checking of generic signatures in function types.",noUncheckedIndexedAccess:"Add `undefined` to a type when accessed using an index.",noUnusedLocals:"Enable error reporting when local variables aren't read.",noUnusedParameters:"Raise an error when a function parameter isn't read.",out:"Deprecated setting. Use [`outFile`](#outFile) instead.",outDir:"Specify an output folder for all emitted files.",outFile:"Specify a file that bundles all outputs into one JavaScript file. If [`declaration`](#declaration) is true, also designates a file that bundles all .d.ts output.",paths:"Specify a set of entries that re-map imports to additional lookup locations.",plugins:"Specify a list of language service plugins to include.",preserveConstEnums:"Disable erasing `const enum` declarations in generated code.",preserveSymlinks:"Disable resolving symlinks to their realpath. This correlates to the same flag in node.",preserveValueImports:"Preserve unused imported values in the JavaScript output that would otherwise be removed.",preserveWatchOutput:"Disable wiping the console in watch mode.",pretty:"Enable color and formatting in TypeScript's output to make compiler errors easier to read.",reactNamespace:"Specify the object invoked for `createElement`. This only applies when targeting `react` JSX emit.",references:"Specify an array of objects that specify paths for projects. Used in project references.",removeComments:"Disable emitting comments.",resolveJsonModule:"Enable importing .json files.",resolvePackageJsonExports:"Use the package.json 'exports' field when resolving package imports.",resolvePackageJsonImports:"Use the package.json 'imports' field when resolving imports.",rootDir:"Specify the root folder within your source files.",rootDirs:"Allow multiple folders to be treated as one when resolving modules.",skipDefaultLibCheck:"Skip type checking .d.ts files that are included with TypeScript.",skipLibCheck:"Skip type checking all .d.ts files.",sourceMap:"Create source map files for emitted JavaScript files.",sourceRoot:"Specify the root path for debuggers to find the reference source code.",strict:"Enable all strict type-checking options.",strictBindCallApply:"Check that the arguments for `bind`, `call`, and `apply` methods match the original function.",strictFunctionTypes:"When assigning functions, check to ensure parameters and the return values are subtype-compatible.",strictNullChecks:"When type checking, take into account `null` and `undefined`.",strictPropertyInitialization:"Check for class properties that are declared but not set in the constructor.",stripInternal:"Disable emitting declarations that have `@internal` in their JSDoc comments.",suppressExcessPropertyErrors:"Disable reporting of excess property errors during the creation of object literals.",suppressImplicitAnyIndexErrors:"Suppress [`noImplicitAny`](#noImplicitAny) errors when indexing objects that lack index signatures.",synchronousWatchDirectory:"Synchronously call callbacks and update the state of directory watchers on platforms that don`t support recursive watching natively.",target:"Set the JavaScript language version for emitted JavaScript and include compatible library declarations.",traceResolution:"Log paths used during the [`moduleResolution`](#moduleResolution) process.",tsBuildInfoFile:"Specify the folder for .tsbuildinfo incremental compilation files.",typeAcquisition:"Specify options for automatic acquisition of declaration files.",typeRoots:"Specify multiple folders that act like `./node_modules/@types`.",types:"Specify type package names to be included without being referenced in a source file.",useDefineForClassFields:"Emit ECMAScript-standard-compliant class fields.",useUnknownInCatchVariables:"Default catch clause variables as `unknown` instead of `any`.",verbatimModuleSyntax:"Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting.",verbose:"Enable verbose logging.",watchDirectory:"Specify how directories are watched on systems that lack recursive file-watching functionality.",watchFile:"Specify how the TypeScript watch mode works."};function O(e,t,n){var o="";return o+=v(t,n,["tsconfig","lsp"]),n.title&&(o+='<div class="code-title">'+n.title+"</div>"),t.langId&&(o+='<div class="language-id">'+t.langId+"</div>"),o+="<div class='code-container'><code>",e.forEach((function(e){0===e.length?o+="<div class='line'></div>":(o+="<div class='line'>",e.forEach((function(e){if(function(e){return!!e.explanation&&e.explanation.find((function(e){return e.scopes.find((function(e){return e.scopeName.includes("support.type.property-name")}))}))}(e)&&function(e){if('"'!==e.content)return e.content.slice(1,e.content.length-1)in D}(e)){var t=e.content.slice(1,e.content.length-1),n=D[t];o+='<span style="color: '+e.color+'">"<a aria-hidden=true tabindex="-1" href=\'https://www.typescriptlang.org/tsconfig#'+t+"'><data-lsp lsp=\""+n+'">'+k(t)+'</data-lsp></a>"</span>'}else o+='<span style="color: '+e.color+'">'+k(e.content)+"</span>"})),o+="</div>")})),o=o.replace(/\n*$/,""),o+="</code></div></pre>"}var M=null,I=function(e,t,n){void 0===n&&(n={});var o=e,i={json5:"json",yml:"yaml"};i[t]&&(t=i[t]);if(["tsx","jsx"].includes(t)&&!n.disableImplicitReactImport&&!/^import\s+React(?:.*)\s+from\s+('|")react\1/gm.test(o)){var a="import React from 'react'\n",r="// ---cut---\n";o=o.includes(r)?o.split(r).map((function(e,t){return 0==t?a.concat(e):e})).join(r):[a,r,o].join("")}return n.customTags=["annotate","log","warn","error"],(0,d.k)(o,t,n)},F=n(3454);function B(){return B=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},B.apply(this,arguments)}function L(e){return e.replace(/</g,"&lt;").replace(/>/g,"&gt;")}var J=function(e,t,n){var o="undefined"!==typeof self&&"undefined"!==typeof self.WorkerGlobalScope||"undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof fetch,i="undefined"!==typeof jest,a=o||i?function(e){}:console.error,r="<pre><code>"+n+"</code></pre>";"object"!==typeof n?(r=String(n),a("### Unexpected error:"),a(n)):n instanceof d.A?(r=function(e){return"\n<h3>"+L(e.title)+"</h3>\n<p>"+L(e.description).replace(/(?:\r\n|\r|\n)/g,"<br>")+"</p>\n<code>"+L(e.recommendation).replace(/(?:\r\n|\r|\n)/g,"<br>")+"</code>\n"}(n),a("### Twoslash error: "+n.title),a(n.description),a(n.recommendation),a("\n### Code Sample"),a(e)):n instanceof Error&&(r=function(e){return"<pre><code>"+e.message.split("## Code")[0]+"</code></pre>"}(n),a("### Unexpected error:"),a(n));var s="\n    <a href='#twoslash-error'><div class='twoslash-fixed-error-note'><span class='twoslash-error-color'></span>Twoslash failure</div></a>\n    <div class='twoslash-exception-message'>"+r+("<p>Raising Code:</p><pre class='twoslash-exception-code'><code>"+L(e)+"</code></pre>")+"</div>";t.type="html",t.value='<div id=\'twoslash-error\'><style>\n@import url(\'http://fonts.cdnfonts.com/css/caslon-os\'); \n\n.twoslash-fixed-error-note { \n    position: fixed;\n    top: 20px;\n    right: 20px;\n    display: flex;\n    align-items: center;\n    padding: .25rem .75rem;\n    color: black;\n    background-color: #FCF3D9;\n    background-clip: padding-box;\n    border-bottom: 1px solid rgba(0,0,0,.05);\n    border-radius: .25rem;\n    font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";\n } \n\n #__docusaurus .twoslash-fixed-error-note {\n    top: 80px;\n }\n\n .twoslash-fixed-error-note:hover {\n    border-bottom: 1px solid rgba(226, 61, 30, 0.8);\n }\n\n .twoslash-error-color {\n    background-color: #E23D1E;\n    width: 18px;\n    height: 18px;\n    border-radius: 9px;\n    margin-right:  10px;\n    color: black;\n }\n\n.twoslash-exception-message { \n    font-family: \'Caslon OS\', sans-serif; \n    background-color: #FCF3D9;\n    font-size: 1.1rem;\n    padding: 2rem;\n    border-left: 2px solid #E23D1E;\n}\n\n.twoslash-exception-message p {\n    margin-top: 1rem;\n    margin-bottom: 0.6rem;\n}\n\n.twoslash-exception-message h3 { \n    margin-top: 0.6rem;\n    margin-bottom: 0.3rem;\n    font-size: 1.8rem;\n}\n\n.twoslash-exception-message code {\n     white-space: pre-wrap;\n     font-family: "JetBrains Mono", Menlo, Monaco, Consolas, Courier New, monospace;\n     margin-bottom: 20px;\n     background-color: #FCF3D9;\n     color: black;\n     border: none;\n     padding-left: 0;\n }\n\n .twoslash-exception-message > code {\n     display: block;\n     margin-bottom: 1.5rem;\n     margin-top: 3rem;\n }\n\n.twoslash-exception-code {\n    border-left: 2px solid #E5A604;\n    padding-left: 20px;\n    background-color: #FCF3D9;\n    color: black;\n}\n</style>'+s+"</div>",t.children=[]},A=new Map;function R(e,t,n,o,i){var a,r={json5:"json"};if(r[t.lang]&&(t.lang=r[t.lang]),"twoslash"===t.lang){if(!t.meta.include||"string"!==typeof t.meta.include)throw new Error("A twoslash code block needs a pragma like 'twoslash include [name]'");!function(e,t,n){var o=[];n.split("\n").forEach((function(n,i){var a=n.trim();if(a.startsWith("// - ")){var r=a.split("// - ")[1].split(" ")[0];e.set(t+"-"+r,o.join("\n"))}else o.push(n)})),e.set(t,o.join("\n"))}(A,t.meta.include,e),a=i.wrapFragments?'<div class="shiki-twoslash-fragment"></div>':""}else{var s=n.map((function(n){var a=n.customName.split("/").pop().replace(".json","");return function(e,t,n,o,i,a){if(!i&&!M)throw new Error("The highlighter object hasn't been initialised via `setupHighLighter` yet in shiki-twoslash");var r,s=i||M,l=h({fg:s.getForegroundColor(),bg:s.getBackgroundColor()},o);try{var c="jsx"===t?"tsx":t;r=s.codeToThemedTokens(e,c)}catch(d){var p="\x3c!-- Note from shiki-twoslash: the language "+t+" was not set up for Shiki to use, and so there is no code highlighting --\x3e";return x(e,l,n)+p}return t&&n.twoslash&&a?j(r,h({},l,{langId:t}),a,n):t&&t.startsWith("json")&&n.tsconfig?O(r,l,n):T(r,h({},l,{langId:t}),n)}(e,t.lang,t.meta,B({themeName:a},i),n,o)}));a=s.join("\n"),n.length>1&&i.wrapFragments&&(a='<div class="shiki-twoslash-fragment">'+a+"</div>")}return a}var _=function(e,t,o){var i=t.lang,a=t.meta;if(void 0===o&&(o={}),!("undefined"!==typeof F&&F.env&&!!F.env.TWOSLASH_DISABLE)&&a.twoslash){var r=function(e,t){for(var n,o=/\/\/ @include: (.*)$/gm,i=[];null!==(n=o.exec(t));){n.index===o.lastIndex&&o.lastIndex++;var a=n[1],r=e.get(a);if(!r){var s="Could not find an include with the key: '"+a+"'.\nThere is: "+Array.from(e.keys())+".";throw new Error(s)}i.push([n.index,n[0].length,r])}var l=t.toString();return i.reverse().forEach((function(e){l=l.substring(0,e[0])+e[2]+l.substring(e[0]+e[1])})),l}(A,e);return function(e,t,o){if("undefined"!==typeof self&&"undefined"!==typeof self.WorkerGlobalScope||"undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof fetch)return I(e,t,o);var i=n(2474).createHash,a=n(6513),r=a.readFileSync,s=a.existsSync,l=a.mkdirSync,c=a.writeFileSync,p=n(3293).join,d=n(1822).i8,u=n(7336).i8,h=i("sha1").update(e+"-"+d+"-"+u).digest("hex"),m=function(){return"/".includes("node_modules")?p("/".split("node_modules")[0],"node_modules",".cache","twoslash"):p("/","..","..",".cache","twoslash")},g=F.versions.pnp?function(){try{var e=n(Object(function(){var e=new Error("Cannot find module 'pnpapi'");throw e.code="MODULE_NOT_FOUND",e}()));return p(e.getPackageInformation(e.topLevel).packageLocation,"node_modules",".cache","twoslash")}catch(t){return m()}}():m(),f=p(g,h+".json");if(s(f))return F.env.debug&&console.log("Using cached twoslash results from "+f),JSON.parse(r(f,"utf8"));var y=I(e,t,o);return s(g)||l(g,{recursive:!0}),c(f,JSON.stringify(y),"utf8"),y}(r,i,o)}},H=function(e){var t,n=(0,u.jx)(e),o=n[0],i=n.slice(1);if("twoslash"===o){var a=i.indexOf("include");-1!==a&&i.splice(a+1,0,"=")}var r=null!=(t=(0,u.Qc)(i))?t:{};return{lang:(o||"").toString(),meta:r}};var q=function(e,t){return void 0===t&&(t={}),function(n){var o=n.value,i=void 0;try{i=H([n.lang,n.meta].filter(Boolean).join(" "))}catch(p){var a=new d.A("Codefence error","Could not parse the codefence for this code sample","It's usually an unclosed string",o);return J(o,n,a)}if(!(Object.keys(i.meta).filter((function(e){return(t.ignoreCodeblocksWithCodefenceMeta||[]).includes(e)})).length>0)){var r;try{r=n.twoslash||_(o,i,t)}catch(p){var s=F&&F.env&&!!F.env.CI,l="undefined"===typeof jest;if(s&&l||t.alwayRaiseForTwoslashExceptions)throw p;return J(o,n,p)}r&&(n.value=r.code,n.lang=r.extension,n.twoslash=r);var c=R(n.value,i,e,r,t);n.type="html",n.value=c,n.children=[]}}},U=JSON.parse('{"name":"shiki-twoslash","tokenColors":[{"name":"Global settings","settings":{"background":"#FCF3D9","foreground":"#111111"}},{"name":"String","scope":"string","settings":{"foreground":"#BB8700"}},{"name":"String Escape","scope":"constant.character.escape, text.html constant.character.entity.named, punctuation.definition.entity.html","settings":{"foreground":"#ffca00"}},{"name":"Boolean","scope":"constant.language.boolean","settings":{"foreground":"#E23D1E"}},{"name":"Number","scope":"constant.numeric","settings":{"foreground":"#0A0E07"}},{"name":"Identifier","scope":"variable, support.variable, support.class, support.constant, meta.definition.variable entity.name.function","settings":{"foreground":"#ff5b2d"}},{"name":"Keyword","scope":"keyword, modifier, variable.language.this, support.type.object, constant.language","settings":{"foreground":"#E23D1E"}},{"name":"Function call","scope":"entity.name.function, support.function","settings":{"foreground":"#0A0E07"}},{"name":"Storage","scope":"storage.type, storage.modifier","settings":{"foreground":"#E23D1E"}},{"name":"Modules","scope":"support.module, support.node","settings":{"foreground":"#ff5b2d","fontStyle":"italic"}},{"name":"Type","scope":"support.type","settings":{"foreground":"#183F66"}},{"name":"Type","scope":"entity.name.type, entity.other.inherited-class","settings":{"foreground":"#183F66"}},{"name":"Comment","scope":"comment","settings":{"foreground":"#BB8700","fontStyle":"italic"}},{"name":"Class","scope":"entity.name.type.class","settings":{"foreground":"#183F66","fontStyle":"underline"}},{"name":"Class variable","scope":"variable.object.property, meta.field.declaration entity.name.function","settings":{"foreground":"#183F66"}},{"name":"Class method","scope":"meta.definition.method entity.name.function","settings":{"foreground":"#183F66"}},{"name":"Function definition","scope":"meta.function entity.name.function","settings":{"foreground":"#183F66"}},{"name":"Template expression","scope":"template.expression.begin, template.expression.end, punctuation.definition.template-expression.begin, punctuation.definition.template-expression.end","settings":{"foreground":"#E23D1E"}},{"name":"Reset embedded/template expression colors","scope":"meta.embedded, source.groovy.embedded, meta.template.expression","settings":{"foreground":"#111111"}},{"name":"YAML key","scope":"entity.name.tag.yaml","settings":{"foreground":"#ff5b2d"}},{"name":"JSON key","scope":"meta.object-literal.key, meta.object-literal.key string, support.type.property-name.json","settings":{"foreground":"#ff5b2d"}},{"name":"JSON constant","scope":"constant.language.json","settings":{"foreground":"#E23D1E"}},{"name":"CSS class","scope":"entity.other.attribute-name.class","settings":{"foreground":"#E23D1E"}},{"name":"CSS ID","scope":"entity.other.attribute-name.id","settings":{"foreground":"#BB8700"}},{"name":"CSS tag","scope":"source.css entity.name.tag","settings":{"foreground":"#183F66"}},{"name":"HTML tag outer","scope":"meta.tag, punctuation.definition.tag","settings":{"foreground":"#E23D1E"}},{"name":"HTML tag inner","scope":"entity.name.tag","settings":{"foreground":"#ff5b2d"}},{"name":"HTML tag attribute","scope":"entity.other.attribute-name","settings":{"foreground":"#0A0E07"}},{"name":"Markdown heading","scope":"markup.heading","settings":{"foreground":"#E23D1E"}},{"name":"Markdown link text","scope":"text.html.markdown meta.link.inline, meta.link.reference","settings":{"foreground":"#ff5b2d"}},{"name":"Markdown list item","scope":"text.html.markdown beginning.punctuation.definition.list","settings":{"foreground":"#E23D1E"}},{"name":"Markdown italic","scope":"markup.italic","settings":{"foreground":"#ff5b2d","fontStyle":"italic"}},{"name":"Markdown bold","scope":"markup.bold","settings":{"foreground":"#ff5b2d","fontStyle":"bold"}},{"name":"Markdown bold italic","scope":"markup.bold markup.italic, markup.italic markup.bold","settings":{"foreground":"#ff5b2d","fontStyle":"italic bold"}},{"name":"Markdown code block","scope":"markup.fenced_code.block.markdown punctuation.definition.markdown","settings":{"foreground":"#BB8700"}},{"name":"Markdown inline code","scope":"markup.inline.raw.string.markdown","settings":{"foreground":"#BB8700"}},{"name":"INI property name","scope":"keyword.other.definition.ini","settings":{"foreground":"#ff5b2d"}},{"name":"INI section title","scope":"entity.name.section.group-title.ini","settings":{"foreground":"#E23D1E"}},{"name":"C# class","scope":"source.cs meta.class.identifier storage.type","settings":{"foreground":"#183F66","fontStyle":"underline"}},{"name":"C# class method","scope":"source.cs meta.method.identifier entity.name.function","settings":{"foreground":"#183F66"}},{"name":"C# function call","scope":"source.cs meta.method-call meta.method, source.cs entity.name.function","settings":{"foreground":"#0A0E07"}},{"name":"C# type","scope":"source.cs storage.type","settings":{"foreground":"#183F66"}},{"name":"C# return type","scope":"source.cs meta.method.return-type","settings":{"foreground":"#183F66"}},{"name":"C# preprocessor","scope":"source.cs meta.preprocessor","settings":{"foreground":"#000000"}},{"name":"C# namespace","scope":"source.cs entity.name.type.namespace","settings":{"foreground":"#111111"}},{"name":"Global settings","settings":{"background":"#FCF3D9","foreground":"#111111"}},{"name":"TS Type","scope":"support.type.primitive.ts","settings":{"foreground":"#BB8700"}},{"name":"TS Var","scope":"meta.definition.variable.js","settings":{"foreground":"#183F66"}}],"colors":{"focusBorder":"#E23D1E","foreground":"#111111","button.background":"#E23D1E","button.foreground":"#000000","dropdown.background":"#000000","input.background":"#000000","inputOption.activeBorder":"#E23D1E","list.activeSelectionBackground":"#E23D1E80","list.activeSelectionForeground":"#000000","list.dropBackground":"#E23D1E80","list.focusBackground":"#E23D1E80","list.focusForeground":"#000000","list.highlightForeground":"#E23D1E","list.hoverBackground":"#0000001a","list.inactiveSelectionBackground":"#00000033","activityBar.background":"#000000","activityBar.dropBackground":"#E23D1E80","activityBarBadge.background":"#E23D1E","activityBarBadge.foreground":"#000000","badge.background":"#E23D1E","badge.foreground":"#000000","sideBar.background":"#000000","sideBarSectionHeader.background":"#000000","editorGroup.dropBackground":"#E23D1E80","editorGroup.focusedEmptyBorder":"#E23D1E","editorGroupHeader.tabsBackground":"#000000","tab.border":"#00000033","tab.activeBorder":"#E23D1E","tab.inactiveBackground":"#000000","tab.activeModifiedBorder":"#E23D1E","tab.inactiveModifiedBorder":"#872412","tab.unfocusedActiveModifiedBorder":"#b43018","tab.unfocusedInactiveModifiedBorder":"#872412","editor.background":"#FCF3D9","editor.foreground":"#111111","editorLineNumber.foreground":"#0000004d","editorLineNumber.activeForeground":"#E23D1E","editor.lineHighlightBorder":"#0000001a","editor.rangeHighlightBackground":"#0000000d","editorWidget.background":"#000000","editorHoverWidget.background":"#000000","editorMarkerNavigation.background":"#000000","peekView.border":"#E23D1E","peekViewEditor.background":"#c9c2ad","peekViewResult.background":"#000000","peekViewTitle.background":"#FCF3D9","panel.background":"#000000","panel.border":"#0000001a","panelTitle.activeBorder":"#11111180","panelTitle.inactiveForeground":"#11111180","statusBar.background":"#c9c2ad","statusBar.debuggingBackground":"#E23D1E","statusBar.debuggingForeground":"#000000","statusBar.noFolderBackground":"#c9c2ad","statusBarItem.activeBackground":"#E23D1E80","statusBarItem.hoverBackground":"#0000001a","statusBarItem.remoteBackground":"#E23D1E","statusBarItem.remoteForeground":"#000000","titleBar.activeBackground":"#c9c2ad","pickerGroup.border":"#0000001a","debugToolBar.background":"#000000","selection.background":"#E23D1E"}}'),W=n(8593),P=n(2938),X=n(9534),Z=n(3905),V={};function K(e){var t=e.components,n=(0,X.Z)(e,["components"]);return(0,Z.kt)("wrapper",Object.assign({},V,n,{components:t,mdxType:"MDXLayout"}),(0,Z.kt)("h2",null,"Cutting a Code Sample"),(0,Z.kt)("p",null,"Every Twoslash code sample needs to be a complete TypeScript program realistically, basically it needs to compile. Quite often to make it compiler, there is a bunch of code which isn't relevant to the user. This can be extracted out of the code sample via ",(0,Z.kt)("inlineCode",{parentName:"p"},"// ---cut---")," which removes all of the code above it from the output."),(0,Z.kt)("h4",null,(0,Z.kt)("inlineCode",{parentName:"h4"},"---cut---")),(0,Z.kt)("p",null,"Cut works after TypeScript has generated the project and pulled out all the editor information (like identifiers, queries, highlights etc) and then amends all of their offsets and lines to re-fit the smaller output. What your user sees is everything below the ",(0,Z.kt)("inlineCode",{parentName:"p"},"---cut---"),"."),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'const level: string = "Danger"\n// ---cut---\nconsole.log(level)\n')),(0,Z.kt)("p",null,"Would only show a single line."),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'// @filename: a.ts\nexport const helloWorld: string = "Hi"\n\n// @filename: b.ts\n// ---cut---\nimport {helloWorld} from "./a"\nconsole.log(helloWorld)\n')),(0,Z.kt)("p",null,"Would only show the last two lines, but to TypeScript it was a program with 2 files and all of the IDE information is hooked up correctly across the files. This is why ",(0,Z.kt)("inlineCode",{parentName:"p"},"// @filename: [file]")," is specifically the only Twoslash command which ",(0,Z.kt)("em",{parentName:"p"},"is not")," removed, because if it's not relevant it can be ",(0,Z.kt)("inlineCode",{parentName:"p"},"---cut---")," away."),(0,Z.kt)("h4",null,(0,Z.kt)("inlineCode",{parentName:"h4"},"---cut-after---")),(0,Z.kt)("p",null,"The sibling to ",(0,Z.kt)("inlineCode",{parentName:"p"},"--cut---")," which trims anything after the sigil:"),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-tsx",metastring:"twoslash",twoslash:!0}),"const Page = () => (\n// ---cut---\n<Container>\n  <ImportantComponent />\n</Container>\n// ---cut-after---\n)\n")))}K.isMDXComponent=!0;var z={};function G(e){var t=e.components,n=(0,X.Z)(e,["components"]);return(0,Z.kt)("wrapper",Object.assign({},z,n,{components:t,mdxType:"MDXLayout"}),(0,Z.kt)("h2",null,"Re-using code inside a document"),(0,Z.kt)("p",null,"A twoslash code sample has a lot of potential to get distractingly long for an author. The more complex the code you're describing, the more setup it needs to be a full compilable sample. To work around this, Shiki Twoslash adds support for creating importable code."),(0,Z.kt)("p",null,"The mental model is that you can create named sets of code which you are probably going to use ",(0,Z.kt)("inlineCode",{parentName:"p"},"---cut--")," on. These work by creating code samples ",(0,Z.kt)("em",{parentName:"p"},"which are not rendered"),"."),(0,Z.kt)("h3",null,(0,Z.kt)("inlineCode",{parentName:"h3"},"twoslash include [name]")),(0,Z.kt)("p",null,"Code samples beginning with the langauge ",(0,Z.kt)("inlineCode",{parentName:"p"},"twoslash")," are not rendered by ",(0,Z.kt)("a",Object.assign({parentName:"p"},{href:"https://www.npmjs.com/package/remark-shiki-twoslash"}),"remark-shiki-twoslash")," (which powers all the SSG plugins). They have to have a name:"),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-twoslash",metastring:"include main",include:!0,main:!0}),"const a = 1\n// - 1\nconst b = 2\n// - 2\nconst c = 3\n")),(0,Z.kt)("p",null,"For the current Markdown document, this adds the ability to write:"),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{}),"// @include: main\n// @include: main-1\n// @include: main-2\n")),(0,Z.kt)("p",null,"Each of which is a different subset of the original ",(0,Z.kt)("inlineCode",{parentName:"p"},"twoslash")," code sample. These are direct string substitutions which happens before TypeScript looks at the code sample."),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),"// @include: main-1\n// ---cut---\nconst nextA = a + 13\n")),(0,Z.kt)("p",null,"Is the same as "),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),"const a = 1\n// ---cut---\nconst nextA = a + 13\n")),(0,Z.kt)("p",null,"The included code is a direct copy and paste, which means it will also contain comments like ",(0,Z.kt)("inlineCode",{parentName:"p"},"// - 2"),", so ",(0,Z.kt)("inlineCode",{parentName:"p"},"---cut--")," them away. Or send a PR to remove them, I'm pretty flexible."),(0,Z.kt)("h3",null,"Trying it in the Playground"),(0,Z.kt)("p",null,"I've added this ",(0,Z.kt)("inlineCode",{parentName:"p"},"twoslash include")," into the Playground, so you can import it in your code samples to see what it looks like:"),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-twoslash",metastring:"include main",include:!0,main:!0}),"const a = 1\n// - 1\nconst b = 2\n// - 2\nconst c = 3\n")))}G.isMDXComponent=!0;var Y={};function Q(e){var t=e.components,n=(0,X.Z)(e,["components"]);return(0,Z.kt)("wrapper",Object.assign({},Y,n,{components:t,mdxType:"MDXLayout"}),(0,Z.kt)("h2",null,"Showing the Emitted Files"),(0,Z.kt)("p",null,"Running a Twoslash code sample is a full TypeScript compiler run, and that run will create files inside the virtual file system. You can replace the contents of your code sample with the results of running TypeScript over the project."),(0,Z.kt)("h4",null,(0,Z.kt)("inlineCode",{parentName:"h4"},"@showEmit")),(0,Z.kt)("p",null,(0,Z.kt)("inlineCode",{parentName:"p"},"// @showEmit")," is the main command to tell Shiki Twoslash that you want to replace the output of your code sample with the equivalent ",(0,Z.kt)("inlineCode",{parentName:"p"},".js")," file."),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'// @showEmit\nconst level: string = "Danger"\n')),(0,Z.kt)("p",null,"Would show the ",(0,Z.kt)("inlineCode",{parentName:"p"},".js")," file which this ",(0,Z.kt)("inlineCode",{parentName:"p"},".ts")," file represents. You can see TypeScript add 'use strict' and ",(0,Z.kt)("inlineCode",{parentName:"p"},": string")," is removed from the output."),(0,Z.kt)("h4",null,(0,Z.kt)("inlineCode",{parentName:"h4"},"@showEmittedFile: [file]")),(0,Z.kt)("p",null,"While the ",(0,Z.kt)("inlineCode",{parentName:"p"},".js")," file is probably the most useful file out of the box, TypeScript does emit other files if you have the right flags enabled (",(0,Z.kt)("inlineCode",{parentName:"p"},".d.ts")," and ",(0,Z.kt)("inlineCode",{parentName:"p"},".map"),") but also when you have a multi-file code sample - you might need to tell Shiki Twoslash which file to show. For all these cases you can ",(0,Z.kt)("em",{parentName:"p"},"also")," add ",(0,Z.kt)("inlineCode",{parentName:"p"},"@showEmittedFile: [file]")," to tell Shiki Twoslash which file you want to show."),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'// @declaration\n// @showEmit\n// @showEmittedFile: index.d.ts\nexport const hello = "world"\n')),(0,Z.kt)("blockquote",null,(0,Z.kt)("p",{parentName:"blockquote"},"Shows the ",(0,Z.kt)("inlineCode",{parentName:"p"},".d.ts")," for a TypeScript code sample")),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'// @sourceMap\n// @showEmit\n// @showEmittedFile: index.js.map\nexport const hello = "world"\n')),(0,Z.kt)("blockquote",null,(0,Z.kt)("p",{parentName:"blockquote"},"Shows the ",(0,Z.kt)("inlineCode",{parentName:"p"},".map")," for the JavaScript -> TypeScript")),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'// @declaration\n// @declarationMap\n// @showEmit\n// @showEmittedFile: index.d.ts.map\nexport const hello = "world"\n')),(0,Z.kt)("blockquote",null,(0,Z.kt)("p",{parentName:"blockquote"},"Shows the ",(0,Z.kt)("inlineCode",{parentName:"p"},".map")," for a ",(0,Z.kt)("inlineCode",{parentName:"p"},".d.ts")," (mainly used for project references)")),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'// @showEmit\n// @showEmittedFile: b.js\n// @filename: a.ts\nexport const helloWorld: string = "Hi"\n\n// @filename: b.ts\nimport {helloWorld} from "./a"\nconsole.log(helloWorld)\n')),(0,Z.kt)("blockquote",null,(0,Z.kt)("p",{parentName:"blockquote"},"Shows ",(0,Z.kt)("inlineCode",{parentName:"p"},".js")," file for ",(0,Z.kt)("inlineCode",{parentName:"p"},"b.ts"))))}Q.isMDXComponent=!0;var $={};function ee(e){var t=e.components,n=(0,X.Z)(e,["components"]);return(0,Z.kt)("wrapper",Object.assign({},$,n,{components:t,mdxType:"MDXLayout"}),(0,Z.kt)("h2",null,"Highlight Code"),(0,Z.kt)("p",null,"There are many ways to help someone focus on the important part of a code sample. One of the most prominent tools for this is by highlighting a particular chunk of code."),(0,Z.kt)("h4",null,"Codefence Line Highlights"),(0,Z.kt)("p",null,"To highlight a particular set of lines, Shiki Twoslash re-used the ",(0,Z.kt)("a",Object.assign({parentName:"p"},{href:"https://github.com/andrewbranch/gatsby-remark-vscode#gatsby-remark-vscode"}),"gatsby-remark-vscode's")," ",(0,Z.kt)("a",Object.assign({parentName:"p"},{href:"https://github.com/andrewbranch/gatsby-remark-vscode#line-highlighting"}),"syntax"),", which expands on the codefence string."),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash {1,3-5}",twoslash:!0,"{1,3-5}":!0}),"const a = 1; // highlighted\nconst b = 2;\nconst c = 3; // highlighted\nconst d = 4; // highlighted\nconst e = 5; // highlighted\n")),(0,Z.kt)("p",null,"The line highlight syntax follows the convention of how your editor shows lines, which is starting at ",(0,Z.kt)("inlineCode",{parentName:"p"},"1"),", not ",(0,Z.kt)("inlineCode",{parentName:"p"},"0"),". You can have as many numbers and ranges as you'd like."),(0,Z.kt)("h4",null,"Inline Highlights"),(0,Z.kt)("p",null,"This is WIP, but there is support in the system for inline highlights via ",(0,Z.kt)("inlineCode",{parentName:"p"},"// ^^^^^")),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'const hello = "world"\n//    ^^^^^^^\n')),(0,Z.kt)("p",null,"The intention is that Shiki Twoslash would highlight just the words which are inside the hats. The line is removed, but there's no support in Shiki Twoslash for rendering them ",(0,Z.kt)("em",{parentName:"p"},"yet"),". ( Or maybe there is and I've not updated the docs, try it? )"))}ee.isMDXComponent=!0;var te={};function ne(e){var t=e.components,n=(0,X.Z)(e,["components"]);return(0,Z.kt)("wrapper",Object.assign({},te,n,{components:t,mdxType:"MDXLayout"}),(0,Z.kt)("h2",null,"Multi File Code Samples"),(0,Z.kt)("p",null,"Twoslash code samples aren't limited to creating a single file, by using ",(0,Z.kt)("inlineCode",{parentName:"p"},"// @filename: [file]")," you can write any file to the virtual file system used by TypeScript to power your code samples. "),(0,Z.kt)("h4",null,(0,Z.kt)("inlineCode",{parentName:"h4"},"@filename: file")),(0,Z.kt)("p",null,"Most of the time, you  don't need to think about the underlaying virtual file system in a code sample, but when you have imports between them it becomes important to know.\nTwoslash will default to creating an ",(0,Z.kt)("inlineCode",{parentName:"p"},"index.[type]")," based on the langauge passed to the code sample:"),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),"// I'm index.ts\n")),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-tsx",metastring:"twoslash",twoslash:!0}),"// I'm index.tsx\n")),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-js",metastring:"twoslash",twoslash:!0}),"// I'm index.tjs\n")),(0,Z.kt)("p",null,"Then until Twoslash hits a ",(0,Z.kt)("inlineCode",{parentName:"p"},"// @filename: [file]")," the parser keeps adding new lines into the same file. After seeing ",(0,Z.kt)("inlineCode",{parentName:"p"},"@filename")," Twoslash creates a new virtual file-system file and adds the new lines to that. You can't edit a file after it was created, but you can overwrite it."),(0,Z.kt)("h4",null,"It can be any file"),(0,Z.kt)("p",null,"For example, if you want to quickly fake a node module:"),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'// @filename: node_modules/@types/mylib/index.d.ts\nexport function doit(): string\n\n// @filename: index.ts\nimport {doit} from "mylib"\nconsole.log(doit)\n')),(0,Z.kt)("p",null,"This code sample sets up the types for a non-existent npm module, and TypeScript picks it up as the definitions in the same way it would in a non-virtual TypeScript project."),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'// @resolveJsonModule\n// @filename: app.json\n{ "version": "23.2.3" }\n\n// @filename: index.ts\nimport appSettings from "./app.json"\nappSettings.version\n//           ^?\n')),(0,Z.kt)("p",null,"This code sets up a JSON object which can be imported in a TypeScript file."),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'// @filename: ambient.d.ts\ndeclare module \'*.mdx\' {\n    export default any\n}\ndeclare module "react"\n\n// @filename: MultiFileDocs.mdx\n## Hello world\n\n// @filename: index.tsx\n// ---cut--\nimport React from "react"\nimport MultiFileDocs from "./MultiFileDocs.mdx"\n\nexport default () => <MultiFileDocs/>\n')),(0,Z.kt)("p",null,"This code is basically a simplified version of how these docs are written. There is a ",(0,Z.kt)("inlineCode",{parentName:"p"},".d.ts")," file which globally says 'mdx files are OK to import' and 'the module \"react\" exists, but don't worry about the details'. "),(0,Z.kt)("p",null,"Then for a user, they only see the imports and exports inside ",(0,Z.kt)("inlineCode",{parentName:"p"},"index.tsx"),"."))}ne.isMDXComponent=!0;var oe={};function ie(e){var t=e.components,n=(0,X.Z)(e,["components"]);return(0,Z.kt)("wrapper",Object.assign({},oe,n,{components:t,mdxType:"MDXLayout"}),(0,Z.kt)("h2",null,"Compiler Errors"),(0,Z.kt)("p",null,"Most of the time, unless you are the TypeScript team, you want to avoid errors in your code samples. Strictly speaking, this usually means setting the right compiler flags and environment in each code sample."),(0,Z.kt)("p",null,"Some times however, you ",(0,Z.kt)("em",{parentName:"p"},"do")," want to raise a compiler error - to show incorrect states. In those cases, twoslash has a way to mark the compiler errors you expect."),(0,Z.kt)("h4",null,(0,Z.kt)("inlineCode",{parentName:"h4"},"@errors: [num]")),(0,Z.kt)("p",null,"All TypeScript compiler errors have a number, this number is ",(0,Z.kt)("em",{parentName:"p"},"relatively")," arbitrary and can change between TypeScript versions. For our case these numbers are useul in declaring what we expect to see."),(0,Z.kt)("p",null,"Taking this example:"),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'const a = "123"\na = 132\n')),(0,Z.kt)("p",null,"TypeScript gives the following error:"),(0,Z.kt)("blockquote",null,(0,Z.kt)("p",{parentName:"blockquote"},"Cannot assign to 'a' because it is a constant. ","[2588]")),(0,Z.kt)("p",null,"Which the code sample does not reference, and thus the codesample has raise the mis-match as an 'exception'. Shiki Twoslash then shows a pretty error, and will set the process exit code to 1 failing any builds.\nYou can use ",(0,Z.kt)("inlineCode",{parentName:"p"},"// @errors: 2588")," to tell Shiki Twoslash that you expect this error to occur:"),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'// @errors: 2588\nconst a = "123"\na = 132\n')),(0,Z.kt)("p",null,"This moves the compiler error message into the code sample."),(0,Z.kt)("h4",null,(0,Z.kt)("inlineCode",{parentName:"h4"},"@noErrors")),(0,Z.kt)("p",null,"Sometimes you have needs in which a broken TypeScript build ",(0,Z.kt)("em",{parentName:"p"},"is OK"),", a good example of this is using a completion query ",(0,Z.kt)("inlineCode",{parentName:"p"},"// ^|")," which requires a broken TypeScript project to work. You can use ",(0,Z.kt)("inlineCode",{parentName:"p"},"// @noErrors")," to supress all errors in a code sample, and ",(0,Z.kt)("em",{parentName:"p"},"not")," have them show inline."),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'// @noErrors\nconst a = "123"\na = 132\n')))}ie.isMDXComponent=!0;var ae={};function re(e){var t=e.components,n=(0,X.Z)(e,["components"]);return(0,Z.kt)("wrapper",Object.assign({},ae,n,{components:t,mdxType:"MDXLayout"}),(0,Z.kt)("h2",null,"Queries in Twoslash"),(0,Z.kt)("p",null,"One of the key reasons for making Twoslash is the ability to use the TypeScript compiler to pull out type information about your code mechanically. Twoslash comes with two different ways to query your code: ",(0,Z.kt)("inlineCode",{parentName:"p"},"?^")," and ",(0,Z.kt)("inlineCode",{parentName:"p"},"?|"),". "),(0,Z.kt)("h4",null,"Extract Type"),(0,Z.kt)("p",null,"Using ",(0,Z.kt)("inlineCode",{parentName:"p"},"^?")," you can pull out type information about a particular identifier in the line of code above it. "),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'const hi = "Hello"\nconst msg = hi + ", world"\n//    ^?\n')),(0,Z.kt)("blockquote",null,(0,Z.kt)("p",{parentName:"blockquote"},"Note: You can click on the code sample above to make it run in the playground. ")),(0,Z.kt)("h4",null,"Completions"),(0,Z.kt)("p",null,"Using ",(0,Z.kt)("inlineCode",{parentName:"p"},"^|")," you can pull out information about a what the auto-complete looks like at a particular location."),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),"// @noErrors\nconsole.e\n//       ^|\n")),(0,Z.kt)("p",null,"What happens is that Twoslash makes a request to TypeScript to get the auto-complete at the point of the ",(0,Z.kt)("inlineCode",{parentName:"p"},"^"),", and then filters the possible outputs based on the letters following the ",(0,Z.kt)("inlineCode",{parentName:"p"},"."),". Up to 5 results will be shown inline, and if a completion is marked as deprecated - that will be respected in the output."),(0,Z.kt)("p",null,"So, in this case, Twoslash asks TypeScript for completions of ",(0,Z.kt)("inlineCode",{parentName:"p"},"console"),", then filters down to completions which start with ",(0,Z.kt)("inlineCode",{parentName:"p"},"e"),". Note that the compiler flag for ",(0,Z.kt)("inlineCode",{parentName:"p"},"// @noErrors")," is set, because ",(0,Z.kt)("inlineCode",{parentName:"p"},"console.e")," is a failing TypeScript code sample but we don't really care about that."))}re.isMDXComponent=!0;var se={};function le(e){var t=e.components,n=(0,X.Z)(e,["components"]);return(0,Z.kt)("wrapper",Object.assign({},se,n,{components:t,mdxType:"MDXLayout"}),(0,Z.kt)("h2",null,"External Types"),(0,Z.kt)("p",null,"Unless you're teaching TypeScript/JavaScript, you're probably going to want to import libraries into your code samples. "),(0,Z.kt)("p",null,"Shiki Twoslash works by faking a virtual file system ",(0,Z.kt)("strong",{parentName:"p"},"over")," your existing file system. This means any ",(0,Z.kt)("inlineCode",{parentName:"p"},"@types")," or libraries with TypeScript definitions should work out of the box with no config."),(0,Z.kt)("h4",null,"Globals"),(0,Z.kt)("p",null,"Setting up globals is a little bit more complex, but not drastically. You need to use the ",(0,Z.kt)("a",Object.assign({parentName:"p"},{href:"https://www.typescriptlang.org/docs/handbook/triple-slash-directives.html#-reference-types-"}),"triple slash reference")," which adds a particular library to the global scope."),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'/// <reference types="node" />\n// ---cut--\nimport {writeFileSync} from "fs" \nwriteFileSync("myfile.txt", "// TODO")\n')),(0,Z.kt)("p",null,"Which sets up Node imports and globals etc. APIs like Jest's are similar cases where you would use a triple slash reference."),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'/// <reference types="jest" />\nimport "jest" // so the playground downloads the types, not needed in node projects\n// ---cut--\n\ntest("my tests", () => {\n    expect("hello").toEqual("hello")\n//   ^?\n})\n')),(0,Z.kt)("p",null,"Note that in the playground, automatic type acquisition first has to download all the .d.ts files for these libraries which could take some time. Once the errors in the editor have gone away, try re-run the code samples by making a change."))}le.isMDXComponent=!0;var ce={};function pe(e){var t=e.components,n=(0,X.Z)(e,["components"]);return(0,Z.kt)("wrapper",Object.assign({},ce,n,{components:t,mdxType:"MDXLayout"}),(0,Z.kt)("h3",null,"TypeScript Environment"),(0,Z.kt)("p",null,"The defaults for TypeScript differ somewhat from a blank TypeScript project (with a blank ",(0,Z.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),"), they are:"),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"const defaultCompilerOptions = {\n  strict: true,\n  target: ts.ScriptTarget.ES2016,\n  allowJs: true,\n  ...(options.defaultCompilerOptions ?? {}),\n}\n")),(0,Z.kt)("p",null,"You can customize the ",(0,Z.kt)("inlineCode",{parentName:"p"},"defaultCompilerOptions")," in your config to set any custom flags which should be applied to every code sample. Otherwise you can use ",(0,Z.kt)("inlineCode",{parentName:"p"},"// @[compilerFlag]")," to set the environment up per release."))}pe.isMDXComponent=!0;var de={};function ue(e){var t=e.components,n=(0,X.Z)(e,["components"]);return(0,Z.kt)("wrapper",Object.assign({},de,n,{components:t,mdxType:"MDXLayout"}),(0,Z.kt)("h2",null,"Meta Annotations on a Code Sample"),(0,Z.kt)("p",null,"OK, bear with me now. Sometimes the thing you want to say is ",(0,Z.kt)("em",{parentName:"p"},"about")," the code, annotations provide a way to provide outside commentary on your code."),(0,Z.kt)("h4",null,(0,Z.kt)("inlineCode",{parentName:"h4"},"@annotate: [left|right] [overrides] - [text]")),(0,Z.kt)("p",null,"Annotate has a lot more controls than most of the other Shiki Twoslash commands, because each use of it probably needs to feel a bit different.\nHere's an example based on the TypeScript home page, click it to get it running so we can talk about what it does:"),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'// @errors: 2304\n// @strict: false\n\nfunction compact(arr) {\n  if (orr.length > 10)\n    return arr.trim(0, 10)\n  return arr\n}\n// @annotate: left { "arrowRot": "90deg 8px 27px", "textDegree": "3deg", "top": "0rem" } - Discovered a typo, the param is arr, not orr!\n')),(0,Z.kt)("p",null,"First up, cool - it adds some text (which overlaps the editor in the playground...) to the left hand side of the code. It features quite a few different options, so lets go through them one by one:"),(0,Z.kt)("ul",null,(0,Z.kt)("li",{parentName:"ul"},(0,Z.kt)("inlineCode",{parentName:"li"},"left")," or ",(0,Z.kt)("inlineCode",{parentName:"li"},"right"),": It's currently ",(0,Z.kt)("inlineCode",{parentName:"li"},"left"),", switch it to ",(0,Z.kt)("inlineCode",{parentName:"li"},"right"),". It's worth noting the arrow flips also, and ",(0,Z.kt)("inlineCode",{parentName:"li"},"90deg")," isn't a great option. Let's look at that next."),(0,Z.kt)("li",{parentName:"ul"},(0,Z.kt)("inlineCode",{parentName:"li"},'{ "arrrowRot": "90deg 8px 27px" }')," - This JSON object is used to manipulate the annotation, you have 3 controls for arrow positioning and rotation: ",(0,Z.kt)("inlineCode",{parentName:"li"},"degrees x y"),". I recommend keeping those in degrees and px, but it's your life. These are overrides from defaults which are OK, but not really something you ever want to ship. I think a reasonable value for "),(0,Z.kt)("li",{parentName:"ul"},(0,Z.kt)("inlineCode",{parentName:"li"},'{ "textDegree": "3deg" }')," - Rotates the text, you probably want something between ",(0,Z.kt)("inlineCode",{parentName:"li"},"-3deg")," and ",(0,Z.kt)("inlineCode",{parentName:"li"},"3deg"),". Optional, defaults to 0. "),(0,Z.kt)("li",{parentName:"ul"},(0,Z.kt)("inlineCode",{parentName:"li"},'{ "top": "0rem" }')," - Sets the y coordinates for the annotation relative to the code sample, if it's not included then it becomes ",(0,Z.kt)("inlineCode",{parentName:"li"},"[lineNum]rem"),".")),(0,Z.kt)("p",null,"What's not included in this sample is ",(0,Z.kt)("inlineCode",{parentName:"p"},"flipped")," which can be used to flip the arrow's orientation."),(0,Z.kt)("p",null,"Here's some examples to try out with this same code sample:"),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{}),'// @annotate: right { "arrowRot": "-50deg -10px -10px", "top": "3rem" } - Discovered a typo, the param is arr, not orr!\n')),(0,Z.kt)("blockquote",null,(0,Z.kt)("p",{parentName:"blockquote"},"A horizontal right example")),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{}),'// @annotate: right { "arrowRot": "190deg 8px 46px", "flipped": false, "textDegree": "-3deg", "top": "-0.7rem" } - Discovered a typo, the param is arr, not orr!\n')),(0,Z.kt)("blockquote",null,(0,Z.kt)("p",{parentName:"blockquote"},"Upside down arrow pointing at the error, using ",(0,Z.kt)("inlineCode",{parentName:"p"},"flipped")," to re-flip the arrow")),(0,Z.kt)("h3",null,"CSS vs Inline Options"),(0,Z.kt)("p",null,'A lot of decisions like "how long should annotations be", "how do they attach" are left to you to play with in the CSS instead of as individual options. These are systemic decisions which affect all of the annotations IMO. Open to changing my mind though. '))}ue.isMDXComponent=!0;var he={};function me(e){var t=e.components,n=(0,X.Z)(e,["components"]);return(0,Z.kt)("wrapper",Object.assign({},he,n,{components:t,mdxType:"MDXLayout"}),(0,Z.kt)("h2",null,"Logging Commands"),(0,Z.kt)("p",null,"When you first see a Shiki Twoslash code sample with an inline compiler error, you instinctively trust that the compiler error is correct because the design shows that it is not a part of the code sample. The logging tools lets you do that, but abuses the systemic trust because your code is not being evaluated to generate the logs."),(0,Z.kt)("p",null,"This feature is effectively a facade, people will trust your output and it will look better. "),(0,Z.kt)("h3",null,(0,Z.kt)("inlineCode",{parentName:"h3"},"@log:"),", ",(0,Z.kt)("inlineCode",{parentName:"h3"},"@warn:"),", ",(0,Z.kt)("inlineCode",{parentName:"h3"},"@error:")),(0,Z.kt)("p",null,"The names are based on the functions on the ",(0,Z.kt)("inlineCode",{parentName:"p"},"console")," object:"),(0,Z.kt)("pre",null,(0,Z.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts",metastring:"twoslash",twoslash:!0}),'console.log("Hello world")\n// @log: Hello world\n\nconsole.warn("Ola Mundo")\n// @warn: Old  Mundo\n\nconsole.error("Neih hou")\n// @error: Neih hou\n')))}me.isMDXComponent=!0;var ge,fe=n(9723),ye=(n(2305),n(6312)),ke=function(){};function we(){var e="ts twoslash",t=function(){return(0,p.useEffect)((function(){ke()})),(0,s.jsx)("div",{id:"compiler-info"})},a=function(){return(0,p.useEffect)((function(){ge()})),(0,s.jsx)("div",{id:"debug-info"})};(0,p.useEffect)((function(){var t,i=document.createElement("script");i.src="https://unpkg.com/shiki",i.async=!0,i.onload=(0,o.Z)(r().mark((function e(){var o;return r().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(o=n.g.shiki).setCDN("https://unpkg.com/shiki/"),e.next=4,o.getHighlighter({themes:[U],langs:["ts"]});case 4:(t=e.sent).customName="web",ge&&ge();case 7:case"end":return e.stop()}}),e)}))),document.body.appendChild(i);var a=document.createElement("script");a.src="https://www.typescriptlang.org/js/vs.loader.js",a.async=!0,a.onload=function(){var i=n.g.require;i.config({paths:{vs:"https://typescript.azureedge.net/cdn/4.4.0-beta/monaco/min/vs",sandbox:"https://www.typescriptlang.org/js/sandbox/"},ignoreDuplicateModules:["vs/editor/editor.main"],catchError:!0,onError:function(e){document.getElementById("loading-message")?(document.getElementById("loading-message").innerText="Cannot load the Playground in this browser",console.error("Error setting up monaco/sandbox/playground from the JS, this is likely that you're using a browser which monaco doesn't support.")):console.error("Caught an error which is likely happening while initializing shiki twoslash."),console.error(e)}}),i(["vs/editor/editor.main","vs/language/typescript/tsWorker","sandbox/index"],function(){var a=(0,o.Z)(r().mark((function a(s,l,c){return r().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:i(["vs/language/typescript/lib/typescriptServices"],function(){var i=(0,o.Z)(r().mark((function o(i){var a,l,p,d,u,h,m;return r().wrap((function(o){for(;;)switch(o.prev=o.next){case 0:return a=n.g.ts,s&&a&&c?null===(l=document.getElementById("loader").parentNode)||void 0===l||l.removeChild(document.getElementById("loader")):console.error("Error: main",!!s,"ts",!!a,"sandbox",!!c),document.getElementById("monaco-editor-embed").style.display="block",o.next=6,c.createTypeScriptSandbox({text:"// Here is an example code snippet, notice that\n// none of these comments are in the output to the right ->\n\n// The rendered version of this code sample pulls \n// out the type of 'str' so that readers don't need\n// to hover over the identifier, and to help focus on\n// what I (the author) think is interesting!\n\n// ---cut---\nconst num = 123\nconst str = \"234234\"\n//    ^?",compilerOptions:{},domID:"monaco-editor-embed",supportTwoslashCompilerOptions:!0,monacoSettings:{renderLineHighlight:"none",automaticLayout:!0,occurrencesHighlight:!1,roundedSelection:!1}},s,a);case 6:return(p=o.sent).monaco.editor.defineTheme("shiki-monaco",{base:"vs",inherit:!0,rules:[{background:"#F5EDD6"}],colors:{"editor.foreground":"#000000","editor.background":"#F5EDD6","editorCursor.foreground":"#183F66","editor.lineHighlightBackground":"#0000FF20","editorLineNumber.foreground":"#008800","editor.selectionBackground":"#88000030","editor.inactiveSelectionBackground":"#88000015"}}),p.monaco.editor.setTheme("shiki-monaco"),p.editor.focus(),ke=function(){var e=a.optionDeclarations.sort((function(e,t){return e.name.localeCompare(t.name)})),t=document.getElementById("compiler-info"),n=document.createElement("h2");n.textContent="Compiler Flags",t.appendChild(n),e.sort((function(e,t){return e.name.localeCompare(t.name)})).forEach((function(e){if(e.category&&!e.isCommandLineOnly&&!["Project_Files_0","Watch_Options_999","Command_line_Options_6171"].includes(e.category.key)){var n=document.createElement("p");n.innerHTML="<code>// @<a href='https://www.typescriptlang.org/tsconfig#".concat(e.name,"' target='_blank'>").concat(e.name,"</a></code><br>").concat(e.description.message,"."),t.appendChild(n)}}))},window.sandbox=p,o.next=14,(0,W.yp)({target:3},"4.3.5",!0,a,p.lzstring);case 14:d=o.sent,u=!0,ge=h=function(){var n=p.getText();if(t){var o=new Map(d),i=window.typeDefinitions||{};Object.keys(i).forEach((function(e){e.startsWith("file:/")&&o.set(e.replace("file:///","/"),i[e])}));var r=q([t],{theme:U,tsModule:a,lzstringModule:p.lzstring,fsMap:o});u&&(u=!0,r({lang:"twoslash",meta:"include main",type:"custom",value:"\nconst a = 1\n// - 1\nconst b = 2\n// - 2\nconst c = 3\n",children:[]}));var s=e.split(" ")[0],l={lang:s,meta:e.replace(s+" ",""),type:"custom",value:n,children:[],twoslash:void 0};if(r(l),l.value){var c=l.value.replace("<p>Raising Code:</p>","");document.getElementById("output").innerHTML=c}var h=document.getElementById("debug-info");if(h&&l.twoslash){for(;h.firstChild;)h.removeChild(h.firstChild);var m=document.createElement("h2");m.textContent="Debug Info",h.appendChild(m);var g=document.createElement("h5");g.textContent="Twoslash Info",h.appendChild(g);var f=document.createElement("pre");h.appendChild(f),l.twoslash.staticQuickInfos=["Skipped for brevity..."];var y=document.createElement("code");y.textContent=JSON.stringify(l.twoslash,null,"  "),f.appendChild(y);var k=document.createElement("h5");k.textContent="VFS Info",h.appendChild(k);var w=Array.from(o.keys()).reverse(),b=[],v=[];w.forEach((function(e){if(e.startsWith("/lib."))b.push(e.replace("/lib","lib"));else if(e.startsWith("/node_modules"))v.push(e.replace("/node_modules","node_modules"));else{var t=document.createElement("p");t.innerText=e,h.appendChild(t);var n=document.createElement("code");n.innerText=o.get(e).trim(),h.appendChild(n)}}))}}},m=(0,P.D)(h,800),p.editor.onDidChangeModelContent(m),h(),p.editor.onDidBlurEditorText((function(){var e=p.createURLQueryWithCompilerOptions(p);window.history.replaceState({},"",e)}));case 22:case"end":return o.stop()}}),o)})));return function(e){return i.apply(this,arguments)}}());case 1:case"end":return a.stop()}}),a)})));return function(e,t,n){return a.apply(this,arguments)}}())},document.body.appendChild(a)}),[]);return(0,p.useEffect)((function(){document.getElementsByClassName("docs").item(0).children.item(0).style.height=(void 0!==("undefined"===typeof localStorage?"undefined":(0,i.Z)(localStorage))&&localStorage.getItem("bottom-height")||"300")+"px"})),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(c(),{children:[(0,s.jsx)("title",{children:"Shiki Twoslash Playground: Experiment with creative code samples"}),(0,s.jsx)("meta",{name:"description",content:"A REPL which takes some Shiki, adds a hint of the TypeScript compiler, and \ud83c\udf89!"}),(0,s.jsx)("link",{rel:"apple-touch-icon",sizes:"180x180",href:"/apple-icon-180x180.png"}),(0,s.jsx)("link",{rel:"icon",type:"image/png",sizes:"192x192",href:"/android-icon-192x192.png"}),(0,s.jsx)("meta",{property:"og:title",content:"Shiki Twoslash: Static Code Samples for JS Projects"}),(0,s.jsx)("meta",{property:"og:type",content:"article"}),(0,s.jsx)("meta",{property:"og:url",content:"https://shikijs.github.io/twoslash/playground"}),(0,s.jsx)("meta",{property:"og:image",content:"https://shikijs.github.io/twoslash/img/ograph.png"}),(0,s.jsx)("meta",{property:"og:image:type",content:"image/png"}),(0,s.jsx)("meta",{property:"og:image:width",content:"1200"}),(0,s.jsx)("meta",{property:"og:image:height",content:"630"}),(0,s.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,s.jsx)("meta",{name:"twitter:site",content:"@orta"}),(0,s.jsx)("meta",{name:"twitter:creator",content:"@orta"}),(0,s.jsx)("meta",{name:"theme-color",content:"#fcf3d9"}),(0,s.jsx)("meta",{name:"msapplication-TileColor",content:"#fcf3d9"})]}),(0,s.jsxs)("header",{className:"nav",children:[(0,s.jsx)("a",{href:"/",children:(0,s.jsxs)("svg",{width:"23",height:"32",viewBox:"0 0 23 32",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,s.jsx)("path",{d:"M0.0673828 22.0295V19.2L11.2505 25.7347V28.3621L0.0673828 22.0295Z",fill:"#183F66",fillOpacity:"0.8"}),(0,s.jsx)("path",{d:"M11.251 2.62737V0L22.232 6.06316L22.2994 8.82526L11.251 2.62737Z",fill:"#E23D1E",fillOpacity:"0.8"}),(0,s.jsx)("path",{d:"M0.0673828 8.96001V6.19791L22.3663 19.0653V22.0295L0.0673828 8.96001Z",fill:"#E5A604",fillOpacity:"0.8"}),(0,s.jsx)("path",{d:"M0.0673828 25.6674V22.8379L11.2505 29.3726V32L0.0673828 25.6674Z",fill:"#183F66",fillOpacity:"0.8"}),(0,s.jsx)("path",{d:"M11.251 6.06316V3.43579L22.232 9.90316V12.5305L11.251 6.06316Z",fill:"#E23D1E",fillOpacity:"0.8"}),(0,s.jsx)("path",{d:"M0 12.5979L0.0673684 9.76843L22.5011 22.9053V25.5326L0 12.5979Z",fill:"#E5A604",fillOpacity:"0.8"}),(0,s.jsx)("path",{d:"M22.4336 22.0295V19.2L11.2504 25.7347V28.3621L22.4336 22.0295Z",fill:"#183F66",fillOpacity:"0.8"}),(0,s.jsx)("path",{d:"M11.251 2.62737V0L0.0678196 6.33263V8.96L11.251 2.62737Z",fill:"#E23D1E",fillOpacity:"0.8"}),(0,s.jsx)("path",{d:"M22.4336 25.6674V22.8379L11.2504 29.3726V32L22.4336 25.6674Z",fill:"#183F66",fillOpacity:"0.8"}),(0,s.jsx)("path",{d:"M11.1152 6.13053V3.43579L0.0668125 9.97053V12.5979L11.1152 6.13053Z",fill:"#E23D1E",fillOpacity:"0.8"})]})}),(0,s.jsx)("p",{className:"subtitle",children:"The playground concerning..."}),(0,s.jsx)("h1",{children:"Shiki-Twoslash"})]}),(0,s.jsxs)("main",{className:"play",children:[(0,s.jsxs)("div",{className:"play-split",children:[(0,s.jsxs)("div",{className:"left",children:[(0,s.jsx)("h3",{className:"title",children:"Input"}),(0,s.jsx)("code",{children:"```"})," ",(0,s.jsx)("input",{id:"codefence",className:"codefence",type:"text",defaultValue:e,onChange:function(t){e=t.target.value,ge()}}),(0,s.jsxs)("div",{id:"loader",children:[(0,s.jsxs)("div",{className:"lds-grid",children:[(0,s.jsx)("div",{}),(0,s.jsx)("div",{}),(0,s.jsx)("div",{}),(0,s.jsx)("div",{}),(0,s.jsx)("div",{}),(0,s.jsx)("div",{}),(0,s.jsx)("div",{}),(0,s.jsx)("div",{}),(0,s.jsx)("div",{})]}),(0,s.jsx)("p",{id:"loading-message",role:"status"})]}),(0,s.jsx)("div",{style:{height:"300px",display:"none"},id:"monaco-editor-embed"}),(0,s.jsx)("code",{children:"```"})]}),(0,s.jsx)("div",{className:"vertical-split"}),(0,s.jsxs)("div",{className:"right",children:[(0,s.jsx)("h3",{className:"title",children:"Output"}),(0,s.jsx)("div",{children:(0,s.jsx)("div",{id:"output"})})]})]}),(0,s.jsx)("div",{className:"docs",children:(0,s.jsx)(ye.e,{defaultSize:{width:"100%",height:300},minHeight:200,boundsByDirection:!0,enable:{top:!0,right:!1,bottom:!1,left:!1,topRight:!1,bottomRight:!1,bottomLeft:!1,topLeft:!1},onResizeStop:function(e,t,n){var o=n.getBoundingClientRect().height;localStorage.setItem("bottom-height",Math.round(o).toString())},children:(0,s.jsx)("div",{className:"docs-content",children:(0,s.jsxs)(fe.mQ,{children:[(0,s.jsxs)(fe.td,{children:[(0,s.jsx)(be,{children:"Features"}),(0,s.jsx)(fe.OK,{children:"Queries"}),(0,s.jsx)(fe.OK,{children:"Errors"}),(0,s.jsx)(fe.OK,{children:"Highlights"}),(0,s.jsx)(fe.OK,{children:"Emit"}),(0,s.jsx)(fe.OK,{children:"Cutting"}),(0,s.jsx)(fe.OK,{children:"Multi-file"}),(0,s.jsx)(fe.OK,{children:"DRY Samples"}),(0,s.jsx)(fe.OK,{children:"@types"}),(0,s.jsx)(fe.OK,{children:"Meta Annotations"}),(0,s.jsx)(fe.OK,{children:"Logging"}),(0,s.jsx)(be,{children:"Reference"}),(0,s.jsx)(fe.OK,{children:"Compiler Opts"}),(0,s.jsx)(fe.OK,{children:"Environment"}),(0,s.jsx)(fe.OK,{children:"Debug"})]}),(0,s.jsxs)(fe.x4,{children:[(0,s.jsx)("h2",{children:"Welcome to the Shiki Twoslash Playground"}),(0,s.jsx)("p",{children:"Documentation lives to the left of this text. You can drag this panel up/down to see more/less."})]}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(re,{})}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(ie,{})}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(ee,{})}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(Q,{})}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(K,{})}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(ne,{})}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(G,{})}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(le,{})}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(ue,{})}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(me,{})}),(0,s.jsx)(fe.x4,{}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(t,{})}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(pe,{})}),(0,s.jsx)(fe.x4,{children:(0,s.jsx)(a,{})})]})})})})]})]})}var be=function(e){var t=e.children;return(0,s.jsx)(fe.OK,{disabled:!0,children:(0,s.jsx)("h4",{children:t})})};be.tabsRole="Tab"},485:function(){},5669:function(){},4813:function(){},2246:function(){},9972:function(){},6513:function(){},3293:function(){},9861:function(){},750:function(){}},function(e){e.O(0,[714,247,774,888,179],(function(){return t=8114,e(e.s=t);var t}));var t=e.O();_N_E=t}]);