{"pageProps":{"stats":{"themeCount":4943},"html":{"basic":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash twoslash lsp\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #BB8700\">// Removes &apos;readonly&apos; attributes from a type&apos;s properties</span></div><div class='line'><span style=\"color: #E23D1E\">type</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='type CreateMutable&lt;Type> = { -readonly [Property in keyof Type]: Type[Property]; }' >CreateMutable</data-lsp></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #183F66\"><data-lsp lsp='(type parameter) Type in type CreateMutable&lt;Type>' >Type</data-lsp></span><span style=\"color: #111111\">&gt; </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">-readonly</span><span style=\"color: #111111\"> [</span><span style=\"color: #183F66\"><data-lsp lsp='(type parameter) Property' >Property</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">in</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">keyof</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='(type parameter) Type in type CreateMutable&lt;Type>' >Type</data-lsp></span><span style=\"color: #111111\">]</span><span style=\"color: #E23D1E\">:</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='(type parameter) Type in type CreateMutable&lt;Type>' >Type</data-lsp></span><span style=\"color: #111111\">[</span><span style=\"color: #183F66\"><data-lsp lsp='(type parameter) Property' >Property</data-lsp></span><span style=\"color: #111111\">];</span></div><div class='line'><span style=\"color: #111111\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #E23D1E\">type</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='type LockedAccount = {&#10;    readonly id: string;&#10;    readonly name: string;&#10;}' >LockedAccount</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">readonly</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='(property) id: string' >id</data-lsp></span><span style=\"color: #E23D1E\">:</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">string</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">readonly</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='(property) name: string' >name</data-lsp></span><span style=\"color: #E23D1E\">:</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">string</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #E23D1E\">type</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='type UnlockedAccount = {&#10;    id: string;&#10;    name: string;&#10;}' >UnlockedAccount</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='type CreateMutable&lt;Type> = { -readonly [Property in keyof Type]: Type[Property]; }' >CreateMutable</data-lsp></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #183F66\"><data-lsp lsp='type LockedAccount = {&#10;    readonly id: string;&#10;    readonly name: string;&#10;}' >LockedAccount</data-lsp></span><span style=\"color: #111111\">&gt;;</span></div><div class='line'>&nbsp;</div></code></div></pre>","multiFileSrc":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #BB8700\">// @module: esnext</span></div><div class='line'><span style=\"color: #BB8700\">// @filename: maths.ts</span></div><div class='line'><span style=\"color: #E23D1E\">export</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">function</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\">absolute</span><span style=\"color: #111111\">(</span><span style=\"color: #FF5B2D\">num</span><span style=\"color: #E23D1E\">:</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">number</span><span style=\"color: #111111\">) {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">if</span><span style=\"color: #111111\"> (</span><span style=\"color: #FF5B2D\">num</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">&lt;</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">0</span><span style=\"color: #111111\">) </span><span style=\"color: #E23D1E\">return</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">num</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">*</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">-</span><span style=\"color: #0A0E07\">1</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">return</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">num</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">// @filename: index.ts</span></div><div class='line'><span style=\"color: #E23D1E\">import</span><span style=\"color: #111111\"> {</span><span style=\"color: #FF5B2D\">absolute</span><span style=\"color: #111111\">} </span><span style=\"color: #E23D1E\">from</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">\"./maths\"</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">value</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">absolute</span><span style=\"color: #111111\">(</span><span style=\"color: #E23D1E\">-</span><span style=\"color: #0A0E07\">1</span><span style=\"color: #111111\">)</span></div><div class='line'></div></code></div></pre>","multiFileHTML":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash twoslash lsp\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #BB8700\">// @filename: maths.ts</span></div><div class='line'><span style=\"color: #E23D1E\">export</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">function</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='function absolute(num: number): number' >absolute</data-lsp></span><span style=\"color: #111111\">(</span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) num: number' >num</data-lsp></span><span style=\"color: #E23D1E\">:</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">number</span><span style=\"color: #111111\">) {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">if</span><span style=\"color: #111111\"> (</span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) num: number' >num</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">&lt;</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">0</span><span style=\"color: #111111\">) </span><span style=\"color: #E23D1E\">return</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) num: number' >num</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">*</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">-</span><span style=\"color: #0A0E07\">1</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">return</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) num: number' >num</data-lsp></span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #BB8700\">// @filename: index.ts</span></div><div class='line'><span style=\"color: #E23D1E\">import</span><span style=\"color: #111111\"> {</span><span style=\"color: #FF5B2D\"><data-lsp lsp='(alias) function absolute(num: number): number&#10;import absolute' >absolute</data-lsp></span><span style=\"color: #111111\">} </span><span style=\"color: #E23D1E\">from</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">\"./maths\"</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const value: number' >value</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\"><data-lsp lsp='(alias) absolute(num: number): number&#10;import absolute' >absolute</data-lsp></span><span style=\"color: #111111\">(</span><span style=\"color: #E23D1E\">-</span><span style=\"color: #0A0E07\">1</span><span style=\"color: #111111\">)</span></div><div class='line'>&nbsp;</div></code></div></pre>","multiFileHighSrc":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #BB8700\">// @module: esnext</span></div><div class='line'><span style=\"color: #BB8700\">// @filename: maths.ts</span></div><div class='line'><span style=\"color: #E23D1E\">export</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">function</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\">absolute</span><span style=\"color: #111111\">(</span><span style=\"color: #FF5B2D\">num</span><span style=\"color: #E23D1E\">:</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">number</span><span style=\"color: #111111\">) {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">if</span><span style=\"color: #111111\"> (</span><span style=\"color: #FF5B2D\">num</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">&lt;</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">0</span><span style=\"color: #111111\">) </span><span style=\"color: #E23D1E\">return</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">num</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">*</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">-</span><span style=\"color: #0A0E07\">1</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">return</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">num</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">// @filename: index.ts</span></div><div class='line'><span style=\"color: #E23D1E\">import</span><span style=\"color: #111111\"> {</span><span style=\"color: #FF5B2D\">absolute</span><span style=\"color: #111111\">} </span><span style=\"color: #E23D1E\">from</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">\"./maths\"</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">value</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">absolute</span><span style=\"color: #111111\">(</span><span style=\"color: #E23D1E\">-</span><span style=\"color: #0A0E07\">1</span><span style=\"color: #111111\">)</span></div><div class='line'><span style=\"color: #BB8700\">//    ^?</span></div></code></div></pre>","multiFileHighHTML":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash twoslash lsp\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #BB8700\">// @filename: maths.ts</span></div><div class='line'><span style=\"color: #E23D1E\">export</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">function</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='function absolute(num: number): number' >absolute</data-lsp></span><span style=\"color: #111111\">(</span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) num: number' >num</data-lsp></span><span style=\"color: #E23D1E\">:</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">number</span><span style=\"color: #111111\">) {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">if</span><span style=\"color: #111111\"> (</span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) num: number' >num</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">&lt;</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">0</span><span style=\"color: #111111\">) </span><span style=\"color: #E23D1E\">return</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) num: number' >num</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">*</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">-</span><span style=\"color: #0A0E07\">1</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">return</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) num: number' >num</data-lsp></span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #BB8700\">// @filename: index.ts</span></div><div class='line'><span style=\"color: #E23D1E\">import</span><span style=\"color: #111111\"> {</span><span style=\"color: #FF5B2D\"><data-lsp lsp='(alias) function absolute(num: number): number&#10;import absolute' >absolute</data-lsp></span><span style=\"color: #111111\">} </span><span style=\"color: #E23D1E\">from</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">\"./maths\"</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const value: number' style='border-bottom: solid 2px lightgrey;'>value</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\"><data-lsp lsp='(alias) absolute(num: number): number&#10;import absolute' >absolute</data-lsp></span><span style=\"color: #111111\">(</span><span style=\"color: #E23D1E\">-</span><span style=\"color: #0A0E07\">1</span><span style=\"color: #111111\">)</span></div><div class='meta-line'><span class='popover-prefix'>       </span><span class='popover'><div class='arrow'></div>const value: number</span></div></code></div></pre>","multiFileSnipSrc":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #BB8700\">// @module: esnext</span></div><div class='line'><span style=\"color: #BB8700\">// @filename: maths.ts</span></div><div class='line'><span style=\"color: #E23D1E\">export</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">function</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\">absolute</span><span style=\"color: #111111\">(</span><span style=\"color: #FF5B2D\">num</span><span style=\"color: #E23D1E\">:</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">number</span><span style=\"color: #111111\">) {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">if</span><span style=\"color: #111111\"> (</span><span style=\"color: #FF5B2D\">num</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">&lt;</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">0</span><span style=\"color: #111111\">) </span><span style=\"color: #E23D1E\">return</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">num</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">*</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">-</span><span style=\"color: #0A0E07\">1</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">return</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">num</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">}</span></div><div class='line'><span style=\"color: #BB8700\">// @filename: index.ts</span></div><div class='line'><span style=\"color: #BB8700\">// ---cut---</span></div><div class='line'><span style=\"color: #E23D1E\">import</span><span style=\"color: #111111\"> {</span><span style=\"color: #FF5B2D\">absolute</span><span style=\"color: #111111\">} </span><span style=\"color: #E23D1E\">from</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">\"./maths\"</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">value</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">absolute</span><span style=\"color: #111111\">(</span><span style=\"color: #E23D1E\">-</span><span style=\"color: #0A0E07\">1</span><span style=\"color: #111111\">)</span></div><div class='line'><span style=\"color: #BB8700\">//    ^?</span></div></code></div></pre>","multiFileSnipHTML":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash twoslash lsp\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #E23D1E\">import</span><span style=\"color: #111111\"> {</span><span style=\"color: #FF5B2D\"><data-lsp lsp='(alias) function absolute(num: number): number&#10;import absolute' >absolute</data-lsp></span><span style=\"color: #111111\">} </span><span style=\"color: #E23D1E\">from</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">\"./maths\"</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const value: number' style='border-bottom: solid 2px lightgrey;'>value</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\"><data-lsp lsp='(alias) absolute(num: number): number&#10;import absolute' >absolute</data-lsp></span><span style=\"color: #111111\">(</span><span style=\"color: #E23D1E\">-</span><span style=\"color: #0A0E07\">1</span><span style=\"color: #111111\">)</span></div><div class='meta-line'><span class='popover-prefix'>       </span><span class='popover'><div class='arrow'></div>const value: number</span></div></code></div></pre>","expressSrc":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #BB8700\">// @noErrors</span></div><div class='line'><span style=\"color: #BB8700\">// @esModuleInterop</span></div><div class='line'><span style=\"color: #E23D1E\">import</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">express</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">from</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">\"express\"</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">app</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">express</span><span style=\"color: #111111\">()</span></div><div class='line'></div><div class='line'><span style=\"color: #FF5B2D\">app</span><span style=\"color: #111111\">.</span><span style=\"color: #0A0E07\">get</span><span style=\"color: #111111\">(</span><span style=\"color: #BB8700\">\"/\"</span><span style=\"color: #111111\">, </span><span style=\"color: #E23D1E\">function</span><span style=\"color: #111111\"> (</span><span style=\"color: #FF5B2D\">req</span><span style=\"color: #111111\">, </span><span style=\"color: #FF5B2D\">res</span><span style=\"color: #111111\">) {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #FF5B2D\">res</span><span style=\"color: #111111\">.</span><span style=\"color: #FF5B2D\">sen</span></div><div class='line'><span style=\"color: #BB8700\">//       ^|</span></div><div class='line'><span style=\"color: #111111\">})</span></div><div class='line'></div><div class='line'><span style=\"color: #FF5B2D\">app</span><span style=\"color: #111111\">.</span><span style=\"color: #0A0E07\">listen</span><span style=\"color: #111111\">(</span><span style=\"color: #0A0E07\">3000</span><span style=\"color: #111111\">)</span></div><div class='line'></div></code></div></pre>","expressHTML":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash twoslash lsp\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #E23D1E\">import</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='(alias) function express(): core.Express&#10;(alias) namespace express&#10;import express' >express</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">from</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">\"express\"</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const app: Express' >app</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\"><data-lsp lsp='(alias) express(): Express&#10;import express' >express</data-lsp></span><span style=\"color: #111111\">()</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #FF5B2D\"><data-lsp lsp='const app: Express' >app</data-lsp></span><span style=\"color: #111111\">.</span><span style=\"color: #0A0E07\"><data-lsp lsp='(property) Application.get: &lt;\"/\", RouteParameters&lt;\"/\">, any, any, QueryString.ParsedQs, Record&lt;string, any>>(path: \"/\", ...handlers: RequestHandler&lt;RouteParameters&lt;\"/\">, any, any, QueryString.ParsedQs, Record&lt;...>>[]) => Express (+5 overloads)' >get</data-lsp></span><span style=\"color: #111111\">(</span><span style=\"color: #BB8700\">\"/\"</span><span style=\"color: #111111\">, </span><span style=\"color: #E23D1E\">function</span><span style=\"color: #111111\"> (</span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) req: Request&lt;RouteParameters&lt;\"/\">, any, any, QueryString.ParsedQs, Record&lt;string, any>>' >req</data-lsp></span><span style=\"color: #111111\">, </span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) res: Response&lt;any, Record&lt;string, any>, number>' >res</data-lsp></span><span style=\"color: #111111\">) {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) res: Response&lt;any, Record&lt;string, any>, number>' >res</data-lsp></span><span style=\"color: #111111\">.</span><span style=\"color: #FF5B2D\"><data-lsp lsp='any' >sen</data-lsp></span></div><div class='meta-line'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class='inline-completions'><ul class='dropdown'><li class=''><span><span class='result-found'>sen</span>d<span></li><li class=''><span><span class='result-found'>sen</span>dDate<span></li><li class='deprecated'><span><span class='result-found'>sen</span>dfile<span></li><li class=''><span><span class='result-found'>sen</span>dFile<span></li><li class=''><span><span class='result-found'>sen</span>dStatus<span></li></ul></span></div><div class='line'><span style=\"color: #111111\">})</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #FF5B2D\"><data-lsp lsp='const app: Express' >app</data-lsp></span><span style=\"color: #111111\">.</span><span style=\"color: #0A0E07\"><data-lsp lsp='(method) Application.listen(port: number, callback?: (() => void) | undefined): Server (+5 overloads)' >listen</data-lsp></span><span style=\"color: #111111\">(</span><span style=\"color: #0A0E07\">3000</span><span style=\"color: #111111\">)</span></div><div class='line'>&nbsp;</div></code></div></pre>","errorSrc":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #BB8700\">// @errors: 2339</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">welcome</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">\"Tudo bem gente?\"</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">words</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">welcome</span><span style=\"color: #111111\">.</span><span style=\"color: #0A0E07\">contains</span><span style=\"color: #111111\">(</span><span style=\"color: #BB8700\">\" \"</span><span style=\"color: #111111\">)</span></div></code></div></pre>","errorHTML":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash twoslash lsp\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const welcome: \"Tudo bem gente?\"' >welcome</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">\"Tudo bem gente?\"</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const words: any' >words</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const welcome: \"Tudo bem gente?\"' >welcome</data-lsp></span><span style=\"color: #111111\">.</span><span style=\"color: #0A0E07\"><data-err><data-lsp lsp='any' >contains</data-lsp></data-err></span><span style=\"color: #111111\">(</span><span style=\"color: #BB8700\">\" \"</span><span style=\"color: #111111\">)</span></div><span class=\"error\"><span>Property 'contains' does not exist on type '\"Tudo bem gente?\"'.</span><span class=\"code\">2339</span></span><span class=\"error-behind\">Property 'contains' does not exist on type '\"Tudo bem gente?\"'.</span></code></div></pre>","highlightSrc":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #E23D1E\">function</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\">greet</span><span style=\"color: #111111\">(</span><span style=\"color: #FF5B2D\">person</span><span style=\"color: #E23D1E\">:</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">string</span><span style=\"color: #111111\">) {</span></div><div class='line highlight'><span style=\"color: #111111\">  </span><span style=\"color: #FF5B2D\">console</span><span style=\"color: #111111\">.</span><span style=\"color: #183F66\">log</span><span style=\"color: #111111\">(</span><span style=\"color: #BB8700\">`Hello </span><span style=\"color: #E23D1E\">${</span><span style=\"color: #FF5B2D\">person</span><span style=\"color: #E23D1E\">}</span><span style=\"color: #BB8700\">,`</span><span style=\"color: #111111\">)</span></div><div class='line dim'><span style=\"color: #111111\">  </span><span style=\"color: #FF5B2D\">console</span><span style=\"color: #111111\">.</span><span style=\"color: #183F66\">log</span><span style=\"color: #111111\">(</span><span style=\"color: #BB8700\">`How do?`</span><span style=\"color: #111111\">)</span></div><div class='line highlight'><span style=\"color: #111111\">}</span></div><div class='line'></div><div class='line dim'><span style=\"color: #0A0E07\">greet</span><span style=\"color: #111111\">(</span><span style=\"color: #BB8700\">\"Maddison\"</span><span style=\"color: #111111\">)</span></div><div class='line'></div></code></div></pre>","highlightHTML":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash twoslash lsp\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line dim'><span style=\"color: #E23D1E\">function</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='function greet(person: string): void' >greet</data-lsp></span><span style=\"color: #111111\">(</span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) person: string' >person</data-lsp></span><span style=\"color: #E23D1E\">:</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">string</span><span style=\"color: #111111\">) {</span></div><div class='line highlight'><span style=\"color: #111111\">  </span><span style=\"color: #FF5B2D\"><data-lsp lsp='var console: Console' >console</data-lsp></span><span style=\"color: #111111\">.</span><span style=\"color: #183F66\"><data-lsp lsp='(method) Console.log(...data: any[]): void' >log</data-lsp></span><span style=\"color: #111111\">(</span><span style=\"color: #BB8700\">`Hello </span><span style=\"color: #E23D1E\">${</span><span style=\"color: #FF5B2D\"><data-lsp lsp='(parameter) person: string' >person</data-lsp></span><span style=\"color: #E23D1E\">}</span><span style=\"color: #BB8700\">,`</span><span style=\"color: #111111\">)</span></div><div class='line dim'><span style=\"color: #111111\">  </span><span style=\"color: #FF5B2D\"><data-lsp lsp='var console: Console' >console</data-lsp></span><span style=\"color: #111111\">.</span><span style=\"color: #183F66\"><data-lsp lsp='(method) Console.log(...data: any[]): void' >log</data-lsp></span><span style=\"color: #111111\">(</span><span style=\"color: #BB8700\">`How do?`</span><span style=\"color: #111111\">)</span></div><div class='line highlight'><span style=\"color: #111111\">}</span></div><div class='line highlight'>&nbsp;</div><div class='line dim'><span style=\"color: #0A0E07\"><data-lsp lsp='function greet(person: string): void' >greet</data-lsp></span><span style=\"color: #111111\">(</span><span style=\"color: #BB8700\">\"Maddison\"</span><span style=\"color: #111111\">)</span></div><div class='line dim'>&nbsp;</div></code></div></pre>","includeSrc":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">markdown</div><div class='code-container'><code><div class='line'><span style=\"color: #E23D1E\">### Adding Values</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">```</span><span style=\"color: #111111\">twoslash include main</span></div><div class='line'><span style=\"color: #111111\">const a = 1</span></div><div class='line'><span style=\"color: #111111\">// - 1</span></div><div class='line'><span style=\"color: #111111\">const b = 2</span></div><div class='line'><span style=\"color: #111111\">// - 2</span></div><div class='line'><span style=\"color: #111111\">const c= 3</span></div><div class='line'><span style=\"color: #BB8700\">```</span></div><div class='line'></div><div class='line'><span style=\"color: #111111\">Let's talk a bit about </span><span style=\"color: #BB8700\">`a`</span><span style=\"color: #111111\">:</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">```</span><span style=\"color: #111111\">ts twoslash</span></div><div class='line'><span style=\"color: #BB8700\">// @include: main-1</span></div><div class='line'><span style=\"color: #BB8700\">```</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">`a`</span><span style=\"color: #111111\"> can be added to another number</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">```</span><span style=\"color: #111111\">ts twoslash</span></div><div class='line'><span style=\"color: #BB8700\">// @include: main-1</span></div><div class='line'><span style=\"color: #BB8700\">// ---cut---</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">nextA</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">a</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">+</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">13</span></div><div class='line'><span style=\"color: #BB8700\">```</span></div><div class='line'></div><div class='line'><span style=\"color: #111111\">Look what happens when you add </span><span style=\"color: #BB8700\">`a + b`</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">```</span><span style=\"color: #111111\">ts twoslash</span></div><div class='line'><span style=\"color: #BB8700\">// @include: main-2</span></div><div class='line'><span style=\"color: #BB8700\">// ---cut---</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">result</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">a</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">+</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">b</span></div><div class='line'><span style=\"color: #BB8700\">//    ^?</span></div><div class='line'><span style=\"color: #BB8700\">```</span></div><div class='line'></div><div class='line'><span style=\"color: #111111\">Finally here is </span><span style=\"color: #BB8700\">`c`</span><span style=\"color: #111111\">:</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">```</span><span style=\"color: #111111\">ts twoslash</span></div><div class='line'><span style=\"color: #BB8700\">// @include: main</span></div><div class='line'><span style=\"color: #BB8700\">// ---cut---</span></div><div class='line'><span style=\"color: #FF5B2D\">c</span><span style=\"color: #111111\">.</span><span style=\"color: #0A0E07\">toString</span><span style=\"color: #111111\">()</span></div><div class='line'><span style=\"color: #BB8700\">```</span></div></code></div></pre>","includeHtmlRender":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<h3>Adding Values</h3>\n\n<p>Let's talk a bit about <code>a</code>:</p>\n<pre class=\"shiki shiki-twoslash twoslash lsp\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const a: 1' >a</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">1</span></div></code></div></pre>\n<p><code>a</code> can be added to another number</p>\n<pre class=\"shiki shiki-twoslash twoslash lsp\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const nextA: number' >nextA</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const a: 1' >a</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">+</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">13</span></div></code></div></pre>\n<p>Look what happens when you add <code>a + b</code></p>\n<pre class=\"shiki shiki-twoslash twoslash lsp\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const result: number' style='border-bottom: solid 2px lightgrey;'>result</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const a: 1' >a</data-lsp></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">+</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const b: 2' >b</data-lsp></span></div><div class='meta-line'><span class='popover-prefix'>        </span><span class='popover'><div class='arrow'></div>const result: number</span></div></code></div></pre>\n<p>Finally here is <code>c</code>:</p>\n<pre class=\"shiki shiki-twoslash twoslash lsp\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #FF5B2D\"><data-lsp lsp='const c: 3' >c</data-lsp></span><span style=\"color: #111111\">.</span><span style=\"color: #0A0E07\"><data-lsp lsp='(method) Number.toString(radix?: number | undefined): string' >toString</data-lsp></span><span style=\"color: #111111\">()</span></div></code></div></pre>","includeHtml":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">markdown</div><div class='code-container'><code><div class='line'><span style=\"color: #E23D1E\">### Adding Values</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">```</span><span style=\"color: #111111\">twoslash include main</span></div><div class='line'><span style=\"color: #111111\">const a = 1</span></div><div class='line'><span style=\"color: #111111\">// - 1</span></div><div class='line'><span style=\"color: #111111\">const b = 2</span></div><div class='line'><span style=\"color: #111111\">// - 2</span></div><div class='line'><span style=\"color: #111111\">const c= 3</span></div><div class='line'><span style=\"color: #BB8700\">```</span></div><div class='line'></div><div class='line'><span style=\"color: #111111\">Let's talk a bit about </span><span style=\"color: #BB8700\">`a`</span><span style=\"color: #111111\">:</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">```</span><span style=\"color: #111111\">ts twoslash</span></div><div class='line'><span style=\"color: #BB8700\">// @include: main-1</span></div><div class='line'><span style=\"color: #BB8700\">```</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">`a`</span><span style=\"color: #111111\"> can be added to another number</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">```</span><span style=\"color: #111111\">ts twoslash</span></div><div class='line'><span style=\"color: #BB8700\">// @include: main-1</span></div><div class='line'><span style=\"color: #BB8700\">// ---cut---</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">nextA</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">a</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">+</span><span style=\"color: #111111\"> </span><span style=\"color: #0A0E07\">13</span></div><div class='line'><span style=\"color: #BB8700\">```</span></div><div class='line'></div><div class='line'><span style=\"color: #111111\">Look what happens when you add </span><span style=\"color: #BB8700\">`a + b`</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">```</span><span style=\"color: #111111\">ts twoslash</span></div><div class='line'><span style=\"color: #BB8700\">// @include: main-2</span></div><div class='line'><span style=\"color: #BB8700\">// ---cut---</span></div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">result</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">a</span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">+</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\">b</span></div><div class='line'><span style=\"color: #BB8700\">//    ^?</span></div><div class='line'><span style=\"color: #BB8700\">```</span></div><div class='line'></div><div class='line'><span style=\"color: #111111\">Finally here is </span><span style=\"color: #BB8700\">`c`</span><span style=\"color: #111111\">:</span></div><div class='line'></div><div class='line'><span style=\"color: #BB8700\">```</span><span style=\"color: #111111\">ts twoslash</span></div><div class='line'><span style=\"color: #BB8700\">// @include: main</span></div><div class='line'><span style=\"color: #BB8700\">// ---cut---</span></div><div class='line'><span style=\"color: #FF5B2D\">c</span><span style=\"color: #111111\">.</span><span style=\"color: #0A0E07\">toString</span><span style=\"color: #111111\">()</span></div><div class='line'><span style=\"color: #BB8700\">```</span></div></code></div></pre>","cssSrc":"<!-- twoslash: { theme: \"../../../script/shiki-twoslash\" } -->\n<pre class=\"shiki shiki-twoslash\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">css</div><div class='code-container'><code><div class='line'><span style=\"color: #E23D1E\">@media</span><span style=\"color: #111111\"> (prefers-color-scheme: light) {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">.shiki.dark-plus</span><span style=\"color: #111111\"> {</span></div><div class='line'><span style=\"color: #111111\">    </span><span style=\"color: #183F66\">display</span><span style=\"color: #111111\">: </span><span style=\"color: #FF5B2D\">none</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">  }</span></div><div class='line'><span style=\"color: #111111\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #E23D1E\">@media</span><span style=\"color: #111111\"> (prefers-color-scheme: dark) {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #E23D1E\">.shiki.light-plus</span><span style=\"color: #111111\"> {</span></div><div class='line'><span style=\"color: #111111\">    </span><span style=\"color: #183F66\">display</span><span style=\"color: #111111\">: </span><span style=\"color: #FF5B2D\">none</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">  }</span></div><div class='line'><span style=\"color: #111111\">}</span></div></code></div></pre>","theme":"<!-- twoslash: { themes: [\"../../../script/shiki-twoslash\", 'dark-plus',  'github-dark',  'github-light',  'light-plus',  'material-theme-darker',  'material-theme-default', 'material-theme-lighter',  'min-light',  'min-dark',  'monokai', 'slack-theme-ochin', 'solarized-light' , 'nord',  'slack-theme-dark-mode',    'material-theme-ocean',  'solarized-dark',  'material-theme-palenight' ] } -->\n<pre class=\"shiki shiki-twoslash twoslash lsp\" style=\"background-color: #FCF3D9; color: #111111\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #E23D1E\">interface</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #111111\"> {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #183F66\"><data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #E23D1E\">:</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">string</span><span style=\"color: #111111\">;</span></div><div class='line'><span style=\"color: #111111\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #E23D1E\">const</span><span style=\"color: #111111\"> </span><span style=\"color: #FF5B2D\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #E23D1E\">:</span><span style=\"color: #111111\"> </span><span style=\"color: #183F66\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #183F66\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #111111\">&gt; </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> {</span></div><div class='line'><span style=\"color: #111111\">  </span><span style=\"color: #FF5B2D\"><data-lsp lsp='(property) title: string' >title</data-lsp>:</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">\"Delete inactive users\"</span><span style=\"color: #111111\">,</span></div><div class='line'><span style=\"color: #111111\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #FF5B2D\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #111111\">.</span><span style=\"color: #FF5B2D\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err></span><span style=\"color: #111111\"> </span><span style=\"color: #E23D1E\">=</span><span style=\"color: #111111\"> </span><span style=\"color: #BB8700\">\"Hello\"</span><span style=\"color: #111111\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki dark-plus twoslash lsp\" style=\"background-color: #1E1E1E; color: #D4D4D4\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #569CD6\">interface</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #D4D4D4\"> {</span></div><div class='line'><span style=\"color: #D4D4D4\">  </span><span style=\"color: #9CDCFE\"><data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #4EC9B0\">string</span><span style=\"color: #D4D4D4\">;</span></div><div class='line'><span style=\"color: #D4D4D4\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #569CD6\">const</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4FC1FF\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #4EC9B0\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #D4D4D4\">&lt;</span><span style=\"color: #4EC9B0\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #D4D4D4\">&gt; = {</span></div><div class='line'><span style=\"color: #D4D4D4\">  </span><span style=\"color: #9CDCFE\"><data-lsp lsp='(property) title: string' >title</data-lsp>:</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #CE9178\">\"Delete inactive users\"</span><span style=\"color: #D4D4D4\">,</span></div><div class='line'><span style=\"color: #D4D4D4\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #9CDCFE\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err></span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #CE9178\">\"Hello\"</span><span style=\"color: #D4D4D4\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki github-dark twoslash lsp\" style=\"background-color: #24292e; color: #e1e4e8\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #F97583\">interface</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #E1E4E8\"> {</span></div><div class='line'><span style=\"color: #E1E4E8\">  </span><span style=\"color: #FFAB70\"><data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #F97583\">:</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">string</span><span style=\"color: #E1E4E8\">;</span></div><div class='line'><span style=\"color: #E1E4E8\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #F97583\">:</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #E1E4E8\">&lt;</span><span style=\"color: #B392F0\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #E1E4E8\">&gt; </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> {</span></div><div class='line'><span style=\"color: #E1E4E8\">  <data-lsp lsp='(property) title: string' >title</data-lsp>: </span><span style=\"color: #9ECBFF\">\"Delete inactive users\"</span><span style=\"color: #E1E4E8\">,</span></div><div class='line'><span style=\"color: #E1E4E8\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #E1E4E8\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp>.<data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">\"Hello\"</span><span style=\"color: #E1E4E8\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #fff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">interface</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\"><data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\">;</span></div><div class='line'><span style=\"color: #24292E\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #24292E\">&lt;</span><span style=\"color: #6F42C1\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #24292E\">&gt; </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  <data-lsp lsp='(property) title: string' >title</data-lsp>: </span><span style=\"color: #032F62\">\"Delete inactive users\"</span><span style=\"color: #24292E\">,</span></div><div class='line'><span style=\"color: #24292E\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #24292E\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp>.<data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"Hello\"</span><span style=\"color: #24292E\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #267F99\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #001080\"><data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #000000\">: </span><span style=\"color: #267F99\">string</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #000000\">: </span><span style=\"color: #267F99\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #000000\">&lt;</span><span style=\"color: #267F99\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #000000\">&gt; = {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #001080\"><data-lsp lsp='(property) title: string' >title</data-lsp>:</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"Delete inactive users\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #001080\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #000000\">.</span><span style=\"color: #001080\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err></span><span style=\"color: #000000\"> = </span><span style=\"color: #A31515\">\"Hello\"</span><span style=\"color: #000000\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki material-theme-darker twoslash lsp\" style=\"background-color: #212121; color: #EEFFFF\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #C792EA\">interface</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span></div><div class='line'><span style=\"color: #EEFFFF\">  </span><span style=\"color: #F07178\"><data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">string</span><span style=\"color: #89DDFF\">;</span></div><div class='line'><span style=\"color: #89DDFF\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> <data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #FFCB6B\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span></div><div class='line'><span style=\"color: #EEFFFF\">  </span><span style=\"color: #F07178\"><data-lsp lsp='(property) title: string' >title</data-lsp></span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">Delete inactive users</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\">,</span></div><div class='line'><span style=\"color: #89DDFF\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #EEFFFF\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">Hello</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki material-theme-default twoslash lsp\" style=\"background-color: #263238; color: #EEFFFF\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #C792EA\">interface</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span></div><div class='line'><span style=\"color: #EEFFFF\">  </span><span style=\"color: #F07178\"><data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">string</span><span style=\"color: #89DDFF\">;</span></div><div class='line'><span style=\"color: #89DDFF\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> <data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #FFCB6B\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span></div><div class='line'><span style=\"color: #EEFFFF\">  </span><span style=\"color: #F07178\"><data-lsp lsp='(property) title: string' >title</data-lsp></span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">Delete inactive users</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\">,</span></div><div class='line'><span style=\"color: #89DDFF\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #EEFFFF\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">Hello</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki material-theme-lighter twoslash lsp\" style=\"background-color: #FAFAFA; color: #90A4AE\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #9C3EDA\">interface</span><span style=\"color: #90A4AE\"> </span><span style=\"color: #E2931D\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #90A4AE\"> </span><span style=\"color: #39ADB5\">{</span></div><div class='line'><span style=\"color: #90A4AE\">  </span><span style=\"color: #E53935\"><data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #39ADB5\">:</span><span style=\"color: #90A4AE\"> </span><span style=\"color: #E2931D\">string</span><span style=\"color: #39ADB5\">;</span></div><div class='line'><span style=\"color: #39ADB5\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #9C3EDA\">const</span><span style=\"color: #90A4AE\"> <data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #39ADB5\">:</span><span style=\"color: #90A4AE\"> </span><span style=\"color: #E2931D\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #39ADB5\">&lt;</span><span style=\"color: #E2931D\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #39ADB5\">&gt;</span><span style=\"color: #90A4AE\"> </span><span style=\"color: #39ADB5\">=</span><span style=\"color: #90A4AE\"> </span><span style=\"color: #39ADB5\">{</span></div><div class='line'><span style=\"color: #90A4AE\">  </span><span style=\"color: #E53935\"><data-lsp lsp='(property) title: string' >title</data-lsp></span><span style=\"color: #39ADB5\">:</span><span style=\"color: #90A4AE\"> </span><span style=\"color: #39ADB5\">\"</span><span style=\"color: #91B859\">Delete inactive users</span><span style=\"color: #39ADB5\">\"</span><span style=\"color: #39ADB5\">,</span></div><div class='line'><span style=\"color: #39ADB5\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #90A4AE\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #39ADB5\">.</span><span style=\"color: #90A4AE\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err> </span><span style=\"color: #39ADB5\">=</span><span style=\"color: #90A4AE\"> </span><span style=\"color: #39ADB5\">\"</span><span style=\"color: #91B859\">Hello</span><span style=\"color: #39ADB5\">\"</span><span style=\"color: #39ADB5\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki min-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292eff\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D32F2F\">interface</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #24292EFF\"> {</span></div><div class='line'><span style=\"color: #24292EFF\">  <data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\">string</span><span style=\"color: #24292EFF\">;</span></div><div class='line'><span style=\"color: #24292EFF\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #D32F2F\">const</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #1976D2\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #6F42C1\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #24292EFF\">&lt;</span><span style=\"color: #6F42C1\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #24292EFF\">&gt; </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> {</span></div><div class='line'><span style=\"color: #24292EFF\">  <data-lsp lsp='(property) title: string' >title</data-lsp></span><span style=\"color: #D32F2F\">:</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">\"Delete inactive users\"</span><span style=\"color: #24292EFF\">,</span></div><div class='line'><span style=\"color: #24292EFF\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #1976D2\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #24292EFF\">.<data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err> </span><span style=\"color: #D32F2F\">=</span><span style=\"color: #24292EFF\"> </span><span style=\"color: #22863A\">\"Hello\"</span><span style=\"color: #24292EFF\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki min-dark twoslash lsp\" style=\"background-color: #1f1f1f; color: #b392f0\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #F97583\">interface</span><span style=\"color: #B392F0\"> <data-lsp lsp='interface Todo' >Todo</data-lsp> {</span></div><div class='line'><span style=\"color: #B392F0\">  <data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">string</span><span style=\"color: #B392F0\">;</span></div><div class='line'><span style=\"color: #B392F0\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #F97583\">const</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> <data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp>&lt;<data-lsp lsp='interface Todo' >Todo</data-lsp>> </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> {</span></div><div class='line'><span style=\"color: #B392F0\">  <data-lsp lsp='(property) title: string' >title</data-lsp></span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">\"Delete inactive users\"</span><span style=\"color: #B392F0\">,</span></div><div class='line'><span style=\"color: #B392F0\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #79B8FF\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #B392F0\">.<data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err> </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">\"Hello\"</span><span style=\"color: #B392F0\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki monokai twoslash lsp\" style=\"background-color: #272822; color: #F8F8F2\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #66D9EF\">interface</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #A6E22E\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #F8F8F2\"> {</span></div><div class='line'><span style=\"color: #F8F8F2\">  <data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #F92672\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #66D9EF\">string</span><span style=\"color: #F8F8F2\">;</span></div><div class='line'><span style=\"color: #F8F8F2\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #66D9EF\">const</span><span style=\"color: #F8F8F2\"> <data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #F92672\">:</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #A6E22E\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #A6E22E\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #F92672\">=</span><span style=\"color: #F8F8F2\"> {</span></div><div class='line'><span style=\"color: #F8F8F2\">  <data-lsp lsp='(property) title: string' >title</data-lsp>: </span><span style=\"color: #E6DB74\">\"Delete inactive users\"</span><span style=\"color: #F8F8F2\">,</span></div><div class='line'><span style=\"color: #F8F8F2\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #F8F8F2\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp>.<data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err> </span><span style=\"color: #F92672\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E6DB74\">\"Hello\"</span><span style=\"color: #F8F8F2\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki slack-theme-ochin twoslash lsp\" style=\"background-color: #FFF; color: #002339\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0991B6\">interface</span><span style=\"color: #002339\"> </span><span style=\"color: #0444AC\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #002339\"> {</span></div><div class='line'><span style=\"color: #002339\">  </span><span style=\"color: #2F86D2\"><data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #7B30D0\">:</span><span style=\"color: #002339\"> </span><span style=\"color: #DC3EB7\">string</span><span style=\"color: #002339\">;</span></div><div class='line'><span style=\"color: #002339\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #0991B6\">const</span><span style=\"color: #002339\"> </span><span style=\"color: #2F86D2\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #7B30D0\">:</span><span style=\"color: #002339\"> </span><span style=\"color: #0444AC\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #002339\">&lt;</span><span style=\"color: #0444AC\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #002339\">&gt; </span><span style=\"color: #7B30D0\">=</span><span style=\"color: #002339\"> {</span></div><div class='line'><span style=\"color: #002339\">  <data-lsp lsp='(property) title: string' >title</data-lsp>: </span><span style=\"color: #A44185\">\"Delete inactive users\"</span><span style=\"color: #002339\">,</span></div><div class='line'><span style=\"color: #002339\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #2F86D2\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #002339\">.</span><span style=\"color: #2F86D2\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err></span><span style=\"color: #002339\"> </span><span style=\"color: #7B30D0\">=</span><span style=\"color: #002339\"> </span><span style=\"color: #A44185\">\"Hello\"</span><span style=\"color: #002339\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki solarized-light twoslash lsp\" style=\"background-color: #FDF6E3; color: #657B83\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #073642\">interface</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #657B83\"> {</span></div><div class='line'><span style=\"color: #657B83\">  <data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #859900\">:</span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">string</span><span style=\"color: #657B83\">;</span></div><div class='line'><span style=\"color: #657B83\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #073642\">const</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #859900\">:</span><span style=\"color: #657B83\"> </span><span style=\"color: #268BD2\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #657B83\">&lt;</span><span style=\"color: #268BD2\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #657B83\">&gt; </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> {</span></div><div class='line'><span style=\"color: #657B83\">  <data-lsp lsp='(property) title: string' >title</data-lsp>: </span><span style=\"color: #2AA198\">\"Delete inactive users\"</span><span style=\"color: #657B83\">,</span></div><div class='line'><span style=\"color: #657B83\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #268BD2\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #657B83\">.</span><span style=\"color: #268BD2\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err></span><span style=\"color: #657B83\"> </span><span style=\"color: #859900\">=</span><span style=\"color: #657B83\"> </span><span style=\"color: #2AA198\">\"Hello\"</span><span style=\"color: #657B83\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki nord twoslash lsp\" style=\"background-color: #2e3440ff; color: #d8dee9ff\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #81A1C1\">interface</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></div><div class='line'><span style=\"color: #D8DEE9FF\">  <data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">string</span><span style=\"color: #81A1C1\">;</span></div><div class='line'><span style=\"color: #ECEFF4\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #ECEFF4\">&lt;</span><span style=\"color: #8FBCBB\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #ECEFF4\">&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></div><div class='line'><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #D8DEE9\"><data-lsp lsp='(property) title: string' >title</data-lsp></span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Delete inactive users</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #ECEFF4\">,</span></div><div class='line'><span style=\"color: #ECEFF4\">}</span><span style=\"color: #81A1C1\">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #D8DEE9\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err></span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Hello</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki slack-theme-dark-mode twoslash lsp\" style=\"background-color: #222222; color: #E6E6E6\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #569CD6\">interface</span><span style=\"color: #E6E6E6\"> </span><span style=\"color: #4EC9B0\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #E6E6E6\"> {</span></div><div class='line'><span style=\"color: #E6E6E6\">  </span><span style=\"color: #9CDCFE\"><data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #E6E6E6\"> </span><span style=\"color: #4EC9B0\">string</span><span style=\"color: #E6E6E6\">;</span></div><div class='line'><span style=\"color: #E6E6E6\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #569CD6\">const</span><span style=\"color: #E6E6E6\"> </span><span style=\"color: #9CDCFE\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #D4D4D4\">:</span><span style=\"color: #E6E6E6\"> </span><span style=\"color: #4EC9B0\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #E6E6E6\">&lt;</span><span style=\"color: #4EC9B0\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #E6E6E6\">&gt; </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #E6E6E6\"> {</span></div><div class='line'><span style=\"color: #E6E6E6\">  </span><span style=\"color: #9CDCFE\"><data-lsp lsp='(property) title: string' >title</data-lsp>:</span><span style=\"color: #E6E6E6\"> </span><span style=\"color: #CE9178\">\"Delete inactive users\"</span><span style=\"color: #E6E6E6\">,</span></div><div class='line'><span style=\"color: #E6E6E6\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #9CDCFE\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #E6E6E6\">.</span><span style=\"color: #9CDCFE\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err></span><span style=\"color: #E6E6E6\"> </span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #E6E6E6\"> </span><span style=\"color: #CE9178\">\"Hello\"</span><span style=\"color: #E6E6E6\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki material-theme-ocean twoslash lsp\" style=\"background-color: #0F111A; color: #A6ACCD\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #C792EA\">interface</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></div><div class='line'><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\"><data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">string</span><span style=\"color: #89DDFF\">;</span></div><div class='line'><span style=\"color: #89DDFF\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> <data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #FFCB6B\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></div><div class='line'><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\"><data-lsp lsp='(property) title: string' >title</data-lsp></span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">Delete inactive users</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\">,</span></div><div class='line'><span style=\"color: #89DDFF\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #A6ACCD\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">Hello</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki solarized-dark twoslash lsp\" style=\"background-color: #002B36; color: #93A1A1\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #93A1A1\">interface</span><span style=\"color: #93A1A1\"> </span><span style=\"color: #CB4B16\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #93A1A1\"> {</span></div><div class='line'><span style=\"color: #93A1A1\">  <data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #859900\">:</span><span style=\"color: #93A1A1\"> </span><span style=\"color: #859900\">string</span><span style=\"color: #93A1A1\">;</span></div><div class='line'><span style=\"color: #93A1A1\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #93A1A1\">const</span><span style=\"color: #93A1A1\"> </span><span style=\"color: #268BD2\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #859900\">:</span><span style=\"color: #93A1A1\"> </span><span style=\"color: #CB4B16\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #93A1A1\">&lt;</span><span style=\"color: #CB4B16\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #93A1A1\">&gt; </span><span style=\"color: #859900\">=</span><span style=\"color: #93A1A1\"> {</span></div><div class='line'><span style=\"color: #93A1A1\">  <data-lsp lsp='(property) title: string' >title</data-lsp>: </span><span style=\"color: #2AA198\">\"Delete inactive users\"</span><span style=\"color: #93A1A1\">,</span></div><div class='line'><span style=\"color: #93A1A1\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #268BD2\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #93A1A1\">.</span><span style=\"color: #268BD2\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err></span><span style=\"color: #93A1A1\"> </span><span style=\"color: #859900\">=</span><span style=\"color: #93A1A1\"> </span><span style=\"color: #2AA198\">\"Hello\"</span><span style=\"color: #93A1A1\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>\n<pre class=\"shiki material-theme-palenight twoslash lsp\" style=\"background-color: #292D3E; color: #A6ACCD\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #C792EA\">interface</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></div><div class='line'><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\"><data-lsp lsp='(property) Todo.title: string' >title</data-lsp></span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">string</span><span style=\"color: #89DDFF\">;</span></div><div class='line'><span style=\"color: #89DDFF\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> <data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #FFCB6B\"><data-lsp lsp='interface Todo' >Todo</data-lsp></span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></div><div class='line'><span style=\"color: #A6ACCD\">  </span><span style=\"color: #F07178\"><data-lsp lsp='(property) title: string' >title</data-lsp></span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">Delete inactive users</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\">,</span></div><div class='line'><span style=\"color: #89DDFF\">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #A6ACCD\"><data-lsp lsp='const todo: Readonly&lt;Todo>' >todo</data-lsp></span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\"><data-err><data-lsp lsp='(property) title: any' >title</data-lsp></data-err> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">Hello</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\">;</span></div><span class=\"error\"><span>Cannot assign to 'title' because it is a read-only property.</span><span class=\"code\">2540</span></span><span class=\"error-behind\">Cannot assign to 'title' because it is a read-only property.</span></code></div></pre>"}},"__N_SSG":true}